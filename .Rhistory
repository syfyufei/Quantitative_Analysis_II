age = ifelse(age < 17, NA, age),
age = 2010 - age,
fam_income = ifelse(fam_income > 9999996, NA, fam_income),
ind_income = ifelse(ind_income > 9999996, NA, ind_income),
nation = ifelse(nation < 0, NA, nation),
height = ifelse(height < 0, NA, height),
weight = ifelse(weight < 0, NA, weight),
en_speak = ifelse(en_speak < 0, NA, en_speak),
mand_speak = ifelse(mand_speak < 0, NA, mand_speak),
educ = case_when(1 < educ & educ < 4 ~ 'primary',
educ == 4 ~ 'junior',
4 < educ & educ< 9 ~ 'senior',
8 < educ & educ< 14 ~ 'higher',
educ == 14 ~ NA_character_,
educ == -3 ~ NA_character_,
educ == 1 ~ 'uneducated'),
fat_educ = case_when(1 < fat_educ & fat_educ < 4 ~ 'primary',
fat_educ == 4 ~ 'junior',
4 < fat_educ & fat_educ< 9 ~ 'senior',
8 < fat_educ & fat_educ< 14 ~ 'higher',
fat_educ == 14 ~ NA_character_,
fat_educ == -3 ~ NA_character_,
fat_educ == 1 ~ 'uneducated')
)
library(tidyverse)
library(haven)
dat <- read_dta("cgss2010_14.dta")
dat <- read_dta("cgss2010_14.dta")
dat1 <- dat %>% select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
names(dat1) <- c('ccp_member', 'ind_income', 'male', 'age', 'nation', 'educ',
'height', 'weight', 'en_speak', 'mand_speak', 'fam_income',
'fat_member', 'fat_educ')
names(dat1) <- c('ccp_member', 'ind_income', 'male', 'age', 'nation', 'educ',
'height', 'weight', 'en_speak', 'mand_speak', 'fam_income',
'fat_member', 'fat_educ')
dat1 <- dat1 %>% mutate(ccp_member = if_else(ccp_member==1,1,0),
fat_member = if_else(fat_member==1,1,0),
male = if_else(male==1, 1,
ifelse(male==2, 0, NA)),
age = ifelse(age < 17, NA, age),
age = 2010 - age,
fam_income = ifelse(fam_income > 9999996, NA, fam_income),
ind_income = ifelse(ind_income > 9999996, NA, ind_income),
nation = ifelse(nation < 0, NA, nation),
height = ifelse(height < 0, NA, height),
weight = ifelse(weight < 0, NA, weight),
en_speak = ifelse(en_speak < 0, NA, en_speak),
mand_speak = ifelse(mand_speak < 0, NA, mand_speak),
educ = case_when(1 < educ & educ < 4 ~ 'primary',
educ == 4 ~ 'junior',
4 < educ & educ< 9 ~ 'senior',
8 < educ & educ< 14 ~ 'higher',
educ == 14 ~ NA_character_,
educ == -3 ~ NA_character_,
educ == 1 ~ 'uneducated'),
fat_educ = case_when(1 < fat_educ & fat_educ < 4 ~ 'primary',
fat_educ == 4 ~ 'junior',
4 < fat_educ & fat_educ< 9 ~ 'senior',
8 < fat_educ & fat_educ< 14 ~ 'higher',
fat_educ == 14 ~ NA_character_,
fat_educ == -3 ~ NA_character_,
fat_educ == 1 ~ 'uneducated')
)
attach(dat1)
library("Matching")
m1 <- glm(ccp_member ~ male + age + black + nation + educ +
height + weight + en_speak + mand_speak + fam_income, family = binomial, data = dat1)
m1 <- glm(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + fam_income, family = binomial, data = dat1)
pm1 <- Match(Y = ind_income, Tr = ccp_member, X = m1$fitted, estimand = "ATT", M = 1, replace = TRUE)
dat2 <- na.omit(dat1)
m1 <- glm(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + fam_income, family = binomial, data = dat2)
pm1 <- Match(Y = ind_income, Tr = ccp_member, X = m1$fitted, estimand = "ATT", M = 1, replace = TRUE)
m1$fitted
length(m1$fitted)
length(ccp_member)
dat2 <- na.omit(dat1)
m1 <- glm(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + fam_income, family = binomial, data = dat2)
pm1 <- Match(Y = ind_income, Tr = ccp_member, X = m1$fitted, estimand = "ATT", M = 1, replace = TRUE)
View(dat2)
m1
View(m1)
```{r}
```{r}
library(tidyverse)
library(haven)
dat <- read_dta("cgss2010_14.dta")
dat1 <- dat %>% select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
names(dat1) <- c('ccp_member', 'ind_income', 'male', 'age', 'nation', 'educ',
'height', 'weight', 'en_speak', 'mand_speak', 'fam_income',
'fat_member', 'fat_educ')
dat1 <- dat1 %>% mutate(ccp_member = if_else(ccp_member==1,1,0),
fat_member = if_else(fat_member==1,1,0),
male = if_else(male==1, 1,
ifelse(male==2, 0, NA)),
age = ifelse(age < 17, NA, age),
age = 2010 - age,
fam_income = ifelse(fam_income > 9999996, NA, fam_income),
ind_income = ifelse(ind_income > 9999996, NA, ind_income),
nation = ifelse(nation < 0, NA, nation),
height = ifelse(height < 0, NA, height),
weight = ifelse(weight < 0, NA, weight),
en_speak = ifelse(en_speak < 0, NA, en_speak),
mand_speak = ifelse(mand_speak < 0, NA, mand_speak),
educ = case_when(1 < educ & educ < 4 ~ 'primary',
educ == 4 ~ 'junior',
4 < educ & educ< 9 ~ 'senior',
8 < educ & educ< 14 ~ 'higher',
educ == 14 ~ NA_character_,
educ == -3 ~ NA_character_,
educ == 1 ~ 'uneducated'),
fat_educ = case_when(1 < fat_educ & fat_educ < 4 ~ 'primary',
fat_educ == 4 ~ 'junior',
4 < fat_educ & fat_educ< 9 ~ 'senior',
8 < fat_educ & fat_educ< 14 ~ 'higher',
fat_educ == 14 ~ NA_character_,
fat_educ == -3 ~ NA_character_,
fat_educ == 1 ~ 'uneducated')
)
library("Matching")
dat2 <- na.omit(dat1)
attach(dat2)
m1 <- glm(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + fam_income, family = binomial, data = dat2)
pm1 <- Match(Y = ind_income, Tr = ccp_member, X = m1$fitted, estimand = "ATT", M = 1, replace = TRUE)
summary(pm1)
library(tidyverse)
library(tidyverse)
library(haven)
dat <- read_dta("cgss2010_14.dta")
dat1 <- dat %>% select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
names(dat1) <- c('ccp_member', 'ind_income', 'male', 'age', 'nation', 'educ',
'height', 'weight', 'en_speak', 'mand_speak', 'fam_income',
'fat_member', 'fat_educ')
dat1 <- dat1 %>% mutate(ccp_member = if_else(ccp_member==1,1,0),
fat_member = if_else(fat_member==1,1,0),
male = if_else(male==1, 1,
ifelse(male==2, 0, NA)),
age = ifelse(age < 17, NA, age),
age = 2010 - age,
fam_income = ifelse(fam_income > 9999996, NA, fam_income),
ind_income = ifelse(ind_income > 9999996, NA, ind_income),
nation = ifelse(nation < 0, NA, nation),
height = ifelse(height < 0, NA, height),
weight = ifelse(weight < 0, NA, weight),
en_speak = ifelse(en_speak < 0, NA, en_speak),
mand_speak = ifelse(mand_speak < 0, NA, mand_speak),
educ = case_when(1 < educ & educ < 4 ~ 'primary',
educ == 4 ~ 'junior',
4 < educ & educ< 9 ~ 'senior',
8 < educ & educ< 14 ~ 'higher',
educ == 14 ~ NA_character_,
educ == -3 ~ NA_character_,
educ == 1 ~ 'uneducated'),
fat_educ = case_when(1 < fat_educ & fat_educ < 4 ~ 'primary',
fat_educ == 4 ~ 'junior',
4 < fat_educ & fat_educ< 9 ~ 'senior',
8 < fat_educ & fat_educ< 14 ~ 'higher',
fat_educ == 14 ~ NA_character_,
fat_educ == -3 ~ NA_character_,
fat_educ == 1 ~ 'uneducated')
)
library(tidyverse)
library(haven)
dat <- read_dta("cgss2010_14.dta")
dat1 <- dat %>% select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
names(dat1) <- c('ccp_member', 'ind_income', 'male', 'age', 'nation', 'educ',
'height', 'weight', 'en_speak', 'mand_speak', 'fam_income',
'fat_member', 'fat_educ')
dat1 <- dat1 %>% mutate(ccp_member = if_else(ccp_member==1,1,0),
fat_member = if_else(fat_member==1,1,0),
male = if_else(male==1, 1,
ifelse(male==2, 0, NA)),
age = ifelse(age < 17, NA, age),
age = 2010 - age,
fam_income = ifelse(fam_income > 9999996, NA, fam_income),
ind_income = ifelse(ind_income > 9999996, NA, ind_income),
nation = ifelse(nation < 0, NA, nation),
height = ifelse(height < 0, NA, height),
weight = ifelse(weight < 0, NA, weight),
en_speak = ifelse(en_speak < 0, NA, en_speak),
mand_speak = ifelse(mand_speak < 0, NA, mand_speak),
educ = case_when(1 < educ & educ < 4 ~ 'primary',
educ == 4 ~ 'junior',
4 < educ & educ< 9 ~ 'senior',
8 < educ & educ< 14 ~ 'higher',
educ == 14 ~ NA_character_,
educ == -3 ~ NA_character_,
educ == 1 ~ 'uneducated'),
fat_educ = case_when(1 < fat_educ & fat_educ < 4 ~ 'primary',
fat_educ == 4 ~ 'junior',
4 < fat_educ & fat_educ< 9 ~ 'senior',
8 < fat_educ & fat_educ< 14 ~ 'higher',
fat_educ == 14 ~ NA_character_,
fat_educ == -3 ~ NA_character_,
fat_educ == 1 ~ 'uneducated'),
log_ind_income = log(ind_income+1),
log_fem_income = log(ind_income+1)
)
library(Matching)
dat2$ccp_member <- as.logical(dat2$ccp_member)
dat2 <- na.omit(dat1)
dat2$ccp_member <- as.logical(dat2$ccp_member)
attach(dat2)
dat1 <- dat %>% select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
names(dat1) <- c('ccp_member', 'ind_income', 'male', 'age', 'nation', 'educ',
'height', 'weight', 'en_speak', 'mand_speak', 'fam_income',
'fat_member', 'fat_educ')
dat1 <- dat %>% select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
library(haven)
dat <- read_dta("cgss2010_14.dta")
dat1 <- dat %>% select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
library(tidyverse)
library(haven)
dat <- read_dta("cgss2010_14.dta")
dat <- read_dta("cgss2010_14.dta")
dat1 <- dat %>% select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
library(tidyverse)
library(haven)
dat <- read_dta("cgss2010_14.dta")
dat <- read_dta("cgss2010_14.dta")
dat1 <- dat %>% select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
dat1 <- dat %>% dplyr::select(a10, # ccp member
a8a, # personal income
a2, # male
a3a, # age
a4, # nation
a7a, # education
a13, # height
a14, # weight
a50, # English speaking
a52, # Mandarin speaking
a62, # family income
a89b, # father ccp member
a89c, # father education
)
names(dat1) <- c('ccp_member', 'ind_income', 'male', 'age', 'nation', 'educ',
'height', 'weight', 'en_speak', 'mand_speak', 'fam_income',
'fat_member', 'fat_educ')
dat1 <- dat1 %>% mutate(ccp_member = if_else(ccp_member==1,1,0),
fat_member = if_else(fat_member==1,1,0),
male = if_else(male==1, 1,
ifelse(male==2, 0, NA)),
age = ifelse(age < 17, NA, age),
age = 2010 - age,
fam_income = ifelse(fam_income > 9999996, NA, fam_income),
ind_income = ifelse(ind_income > 9999996, NA, ind_income),
nation = ifelse(nation < 0, NA, nation),
height = ifelse(height < 0, NA, height),
weight = ifelse(weight < 0, NA, weight),
en_speak = ifelse(en_speak < 0, NA, en_speak),
mand_speak = ifelse(mand_speak < 0, NA, mand_speak),
educ = case_when(1 < educ & educ < 4 ~ 'primary',
educ == 4 ~ 'junior',
4 < educ & educ< 9 ~ 'senior',
8 < educ & educ< 14 ~ 'higher',
educ == 14 ~ NA_character_,
educ == -3 ~ NA_character_,
educ == 1 ~ 'uneducated'),
fat_educ = case_when(1 < fat_educ & fat_educ < 4 ~ 'primary',
fat_educ == 4 ~ 'junior',
4 < fat_educ & fat_educ< 9 ~ 'senior',
8 < fat_educ & fat_educ< 14 ~ 'higher',
fat_educ == 14 ~ NA_character_,
fat_educ == -3 ~ NA_character_,
fat_educ == 1 ~ 'uneducated'),
log_ind_income = log(ind_income+1),
log_fam_income = log(fam_income+1)
)
m1 <- glm(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + log_fam_income, family = binomial, data = dat2)
library(Matching)
dat2 <- na.omit(dat1)
dat2$ccp_member <- as.logical(dat2$ccp_member)
attach(dat2)
m1 <- glm(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + log_fam_income, family = binomial, data = dat2)
pm1 <- Match(Y = log_ind_income, Tr = ccp_member, X = m1$fitted, estimand = "ATT", M = 1, replace = TRUE)
summary(pm1)
m2 <- glm(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + log_fam_income, family = binomial, data = dat2)
pm2 <- Match(Y = log_ind_income, Tr = ccp_member, X = m1$fitted, estimand = "ATT", M = 5, replace = TRUE)
summary(pm2)
options(scipen=200)
summary(pm2)
mNearest1v1 <- matchit(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + fam_income, data = dat2, method = "nearest", ratio=1)
# mb <- MatchBalance(ccp_member ~ male + age  + nation + educ +
#   height + weight + en_speak + mand_speak + fam_income,
#   match.out = pm1, nboots = 1000, data = dat2)
library(MatchIt)
mNearest1v1 <- matchit(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + fam_income, data = dat2, method = "nearest", ratio=1)
sNearest <- summary(mNearest1v1, standardize = TRUE)
print(sNearest)
plot(sNearest)
plot(sNearest)
mNearest1v5 <- matchit(ccp_member ~ male + age  + nation + educ +
height + weight + en_speak + mand_speak + fam_income, data = dat2, method = "nearest", ratio=5)
sNearest <- summary(mNearest1v1, standardize = TRUE)
plot(sNearest)
sNearest1v1 <- summary(mNearest1v1, standardize = TRUE)
plot(sNearest1v1)
sNearest1v5 <- summary(mNearest1v5, standardize = TRUE)
plot(sNearest1v5)
plot(mNearest1v1, type="QQ")
# 重合性检验
plot(mNearest1v1, type="QQ")
plot(sNearest1v5, type="QQ")
plot(sNearest1v5, type="QQ")
# 重合性检验
plot(mNearest1v1, type="QQ")
plot(mNearest1v5, type="QQ")
plot(mNearest1v5, type="QQ")
# 重合性检验
plot(mNearest1v1, type="QQ")
# 加上重合选项
csMatch <- Match(Y = log_ind_income, Tr = ccp_member, X = m1$fitted, estimand = "ATT", CommonSupport=TRUE)
summary(csMatch)
psens(x = pm1, Gamma = 2, GammaInc = 0.1)
library(rbounds)
psens(x = pm1, Gamma = 2, GammaInc = 0.1)
hlsens(x = pm1, Gamma = 2, GammaInc = 0.1)
summary(pm1)
library(foreign)
dat <- read.dta("garrum6.dta")
getwd()
setwd("E:/SynologyDrive/Github/Quantitative_Analysis_II/slide/week13")
setwd("E:/SynologyDrive/Github/Quantitative_Analysis_II/slides/week13")
library(foreign)
dat <- read.dta("garrum6.dta")
library(plm)
library(plm)
mp <- plm(gdp ~ oild + demand + corp + leftlab + clint, data=dat, index =
"country", model = "pooling")
summary(mp)
library(foreign)
dat <- read.dta("garrum6.dta")
library(plm)
mp <- plm(gdp ~ oild + demand + corp + leftlab + clint, data=dat, index =
"country", model = "pooling")
summary(mp)
M0 <- lm(gdp ~ oild + demand + corp + leftlab + clint, data=dat)
summary(M0)
mf <- plm(gdp ~ oild + demand + corp + leftlab + clint, data=dat, index =
"country", model = "within")
summary(mf)
# F-test manually
# H0: u=0
df1 <- df.residual(mp)-df.residual(mf) # number of dummies K-1
df2 <- df.residual(mf)                 # degree of freedom of fixed effect model (N-K-1)
ssrp <- sum(resid(mp)^2)               # sum of residual square of pooling model
ssrf <- sum(resid(mf)^2)               # sum of residual square of fixed effect model
fQuant <- df2*(ssrp-ssrf)/ssrf/df1
pf(fQuant, df1, df2, lower.tail=FALSE)
# significant means reject H0, ie u#0, so fixed effect model is appropriate
# F-test in a function
pFtest(mf, mp)
mr <- plm(gdp ~ oild + demand + corp + leftlab + clint, data=dat, index =
"country", model = "random") #随机效应模型
summary(mr)
# Hausmen test manually
# H0 Re is appropriate, fe=re, re is more efficient
# Ha Re is inappropriate, fe#re, re is biased/inconsistent
mfB <- coef(mf)[1:5]
mrB <- coef(mr)[2:6]
mfV <- vcov(mf)[1:5,1:5]
mrV <- vcov(mr)[2:6,2:6]
hQuant <- t(mfB-mrB)%*%solve(mfV-mrV)%*%(mfB-mrB)
hQuant
pchisq(hQuant, 5, lower.tail=FALSE)
phtest(mf, mr)
#PCSE manually
mOLS <- lm(gdp ~ oild + demand + corp + leftlab + clint, data=dat)
summary(mOLS)
nK <- length(unique(dat$country))
nT <- length(unique(dat$year))
E <- matrix(resid(mOLS), nrow=nT, ncol=nK)
S <- t(E)%*%E/nT
IT <- diag(nT)
Omega <- S%x%IT
X <- model.matrix(mOLS)
XXinv <- solve(t(X)%*%X)
middle <- t(X)%*%Omega%*%X
PCSE <- sqrt(diag(XXinv %*% middle %*% XXinv))
View(dat)
library(pcse)
mPCSE <- pcse(mOLS, dat$country, dat$year)
summary(mPCSE)
library(pcse)
install.packages('pcse')
install.packages('panelAR')
install.packages('pcse')
