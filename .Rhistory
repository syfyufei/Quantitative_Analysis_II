curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * FALSE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=1)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1), labels=c("非党员", "党员"),
adj=0, xpd=NA)
save.image(file = './fig/fig1.jpg' ,width = 8, height = 5, dpi = 100)
# save.image(file = './fig/fig1.jpg' ,width = 8, height = 5, dpi = 100)
#---------------interaction term----------
#-----------2.4---------
m2 <- glm(protest ~ income + cpcer + nation_lan + cpcer:income,
family = binomial(link = "logit"), data = mydata)
summary(m2)
#--------2.5-----------
anova(m2, test="Chisq")
#---------2.6----------
PseudoR2(m2)
#---------2.7----------
z.test(m2, sigma.x=0.5, conf.level=0.95)
#--------2.9-----------
invlogit<-function(x){
1/(1+exp(-x))
}
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
axis(2, at=c(0,0.5,1))
axis(1)
curve(invlogit(coef(m2)[1] + coef(m2)[2] * x + coef(m2)[3] * TRUE + coef(m2)[4] * 1 + coef(m2)[8] * 1 * x), from = min(income), to = max(income), add = TRUE, col=2)
curve(invlogit(coef(m2)[1] + coef(m2)[2] * x + coef(m2)[3] * FALSE + coef(m2)[4] * 1), from = min(income), to = max(income), add = TRUE, col=1)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1 +
coef(m2)[8] *  c(0,1) * max(income)), labels=c("非党员", "党员"), adj=0, xpd=NA)
library(foreign)
library(DescTools)
library(dplyr)
library(lmtest)
library(BSDA)
library(stargazer)
options(scipen = 200, digits = 2)
data <- read.dta('./HW1/cgss2010_12.dta')
mydata <- data[,c('a49', 'a8a', 'a10','d12c')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' &
mydata$a49 != '拒绝回答缺失值' &
mydata$a49 != '不知道缺失值', ]
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(protest = ifelse( d12c == '从未参与', FALSE, TRUE))
mydata <- mydata[, c('a8a', 'a49', 'cpcer', 'protest')]
names(mydata) <- c('income', 'nation_lan', 'cpcer', 'protest')
# mydata$income <- log(as.numeric(mydata$income)+1)
mydata$income <- as.numeric(mydata$income)
#-----------1.4---------
m1 <- glm(protest ~ income + cpcer + nation_lan,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(protest ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
stargazer(m1, type = 'text')
summary(m0)
coef(m1)
confint(m1)
exp(coef(m1))
exp(confint(m1))
#--------1.5-----------
anova(m1, test="Chisq")
#---------1.6----------
PseudoR2(m1)
#---------1.7----------
z.test(m1, sigma.x=0.5, conf.level=0.95)
#--------1.9-----------
invlogit<-function(x){
1/(1+exp(-x))
}
coef(m1)[3]
# logLik()
attach(mydata)
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
axis(2, at=c(0,0.5,1))
axis(1)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=2)
View(m1)
coefci.default()
coefci.default()m1
coefci.default(m1)
library(foreign)
library(DescTools)
library(dplyr)
library(lmtest)
library(BSDA)
library(stargazer)
options(scipen = 200, digits = 2)
data <- read.dta('./HW1/cgss2010_12.dta')
mydata <- data[,c('a49', 'a8a', 'a10','d12c')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' &
mydata$a49 != '拒绝回答缺失值' &
mydata$a49 != '不知道缺失值', ]
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(protest = ifelse( d12c == '从未参与', FALSE, TRUE))
mydata <- mydata[, c('a8a', 'a49', 'cpcer', 'protest')]
names(mydata) <- c('income', 'nation_lan', 'cpcer', 'protest')
# mydata$income <- log(as.numeric(mydata$income)+1)
mydata$income <- as.numeric(mydata$income)
#-----------1.4---------
m1 <- glm(protest ~ income + cpcer + nation_lan,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(protest ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
stargazer(m1, type = 'text')
summary(m0)
coef(m1)
confint(m1)
exp(coef(m1))
exp(confint(m1))
#--------1.5-----------
anova(m1, test="Chisq")
#---------1.6----------
PseudoR2(m1)
#---------1.7----------
z.test(m1, sigma.x=0.5, conf.level=0.95)
#--------1.9-----------
invlogit<-function(x){
1/(1+exp(-x))
}
coef(m1)[3]
# logLik()
attach(mydata)
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
axis(2, at=c(0,0.5,1))
axis(1)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=2)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * FALSE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=1)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1), labels=c("非党员", "党员"),
adj=0, xpd=NA)
# save.image(file = './fig/fig1.jpg' ,width = 8, height = 5, dpi = 100)
#---------------interaction term----------
#-----------2.4---------
m2 <- glm(protest ~ income + cpcer + nation_lan + cpcer:income,
family = binomial(link = "logit"), data = mydata)
summary(m2)
#--------2.5-----------
anova(m2, test="Chisq")
#---------2.6----------
PseudoR2(m2)
#---------2.7----------
z.test(m2, sigma.x=0.5, conf.level=0.95)
#--------2.9-----------
invlogit<-function(x){
1/(1+exp(-x))
}
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
axis(2, at=c(0,0.5,1))
axis(1)
curve(invlogit(coef(m2)[1] + coef(m2)[2] * x + coef(m2)[3] * TRUE + coef(m2)[4] * 1 + coef(m2)[8] * 1 * x), from = min(income), to = max(income), add = TRUE, col=2)
curve(invlogit(coef(m2)[1] + coef(m2)[2] * x + coef(m2)[3] * FALSE + coef(m2)[4] * 1), from = min(income), to = max(income), add = TRUE, col=1)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1 +
coef(m2)[8] *  c(0,1) * max(income)), labels=c("非党员", "党员"), adj=0, xpd=NA)
library(foreign)
library(DescTools)
library(dplyr)
library(lmtest)
library(BSDA)
library(stargazer)
options(scipen = 200, digits = 2)
data <- read.dta('./HW1/cgss2010_12.dta')
mydata <- data[,c('a49', 'a8a', 'a10','d12c')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' &
mydata$a49 != '拒绝回答缺失值' &
mydata$a49 != '不知道缺失值', ]
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(protest = ifelse( d12c == '从未参与', FALSE, TRUE))
mydata <- mydata[, c('a8a', 'a49', 'cpcer', 'protest')]
names(mydata) <- c('income', 'nation_lan', 'cpcer', 'protest')
# mydata$income <- log(as.numeric(mydata$income)+1)
mydata$income <- as.numeric(mydata$income)
#-----------1.4---------
m1 <- glm(protest ~ income + cpcer + nation_lan,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(protest ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
stargazer(m1, type = 'text')
summary(m0)
coef(m1)
confint(m1)
exp(coef(m1))
exp(confint(m1))
View(mydata)
#--------1.5-----------
anova(m1, test="Chisq")
#---------1.6----------
PseudoR2(m1)
#---------1.7----------
z.test(m1, sigma.x=0.5, conf.level=0.95)
#--------1.9-----------
invlogit<-function(x){
1/(1+exp(-x))
}
coef(m1)[3]
# logLik()
attach(mydata)
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
axis(2, at=c(0,0.5,1))
axis(1)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=2)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * FALSE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=1)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1), labels=c("非党员", "党员"),
adj=0, xpd=NA)
library(foreign)
library(foreign)
data <- read.dta('./2sls.dta)
library(foreign)
data <- read.dta('./2sls.dta)
library(foreign)
data <- read.dta('./2sls.dta')
View(data)
data <- read.dta('./2sls.dta')
data <- 0
data <- read.dta('./2sls.dta')
m1 <- lm(y ~ x1 + x2 + x3, data = data)
,1
m1
library(stargazer)
library(foreign)
library(stargazer)
data <- read.dta('./2sls.dta')
library(foreign)
library(stargazer)
data <- read.dta('./2sls.dta')
stargazer(m1)
stargazer(m1, type = 'text')
library(foreign)
library(stargazer)
library(systemfit)
data <- read.dta('./2sls.dta')
eq1 <- y ~ x1 + x2 + x3
eq2 <- x3 ~ x1 + x2 + y
system <- list(eq1, eq2)
inst <- ~ x1 + x2 + z1 + z2
M2 <- systemfit(system, method="2SLS", inst=inst)
attach(data)
eq1 <- y ~ x1 + x2 + x3
eq2 <- x3 ~ x1 + x2 + y
system <- list(eq1, eq2)
inst <- ~ x1 + x2 + z1 + z2
M2 <- systemfit(system, method="2SLS", inst=inst)
summary(M2)
library(parallel)
parallel::detectCores()
bootFUN <- function(){
n <- nrow(data)
idx <- sample(1:n, n, replace=TRUE)
tmp <- as.data.frame(data[idx, ])
M1 <- lm(x3 ~ x1 + x2 + z1 + z2, data=tmp)
x3hat <- predict(M1)
M2 <- lm(y~x1+x2+x3hat, data=tmp)
return(coef(M2)["x3hat"])
}
# 1000 times
foo <- function() replicate(125, bootFUN())
cl <- makeCluster(parallel::detectCores())
clusterExport(cl = cl, c("data", "bootFUN")) # export object to each thread
tryCatch(res <- clusterCall(cl=cl, fun = foo), finally = stopCluster(cl))
sd(unlist(res))
abline(v = sd(unlist(res)), col = 1)
res
class(res)
unlist(res)
class(unlist(res))
class(res)
class(res)
hist(res)
hist(unlist(res)
)
library(foreign)
data <- read.dta('./Acemoglu.dta')
?ivreg
library(AER)
library(stargazer)
M1 <- ivreg(logpgp95 ~ avexpr + f_french + sjlofr + catho80 + muslim80 + no_cpm80 |
. -avexpr + logem4, data = data)
View(data)
data <- read.dta('./Acemoglu.dta')
data <- read.dta('../Acemoglu.dta')
data <- read.dta('./Acemoglu.dta')
data <- read.dta('../Acemoglu.dta')
library(foreign)
library(AER)
library(stargazer)
data <- read.dta('./Acemoglu.dta')
library(foreign)
library(AER)
library(stargazer)
data <- read.dta('./Acemoglu.dta')
library(foreign)
getwd()
dat <- read.dta("./slides/week04/wdi.dta")
summary(dat)
dat <- dat[,c(-1,-2)]
View(dat)
library(foreign)
dat <- read.dta("./slides/week04/wdi.dta")
summary(dat)
View(dat)
library(haven)
setwd("E:/SynologyDrive/Github/Quantitative_Analysis_II/hwk03/")
data <- read_dta('./abs.dta')
summary(data)
data <- na.omit(data)
n <- dim(data)[1]
corMat <- cor(data, use = "pairwise.complete.obs") #correlation matrix
library(corrplot)
res <- cor.mtest(data, conf.level = 0.95)
corrplot(corMat, method = "ellipse", type = "lower", p.mat = res$p, sig.level = 0.05, order = "hclust")
library(psych)
alpha(data, check.keys=TRUE)
fit1 <- principal(data, nfactors=14, rotate="varimax")
print(fit1, digits=2)
fit1 <- principal(data,  rotate="varimax")
fit1 <- principal(data, nfactors=14, rotate="none")
print(fit1, digits=2)
fit1 <- $uniquenesses
fit1$uniquenesses
fit1$uniquenesses(digits=2)
options(digits=2)
?options
options(scipen = 200, digits=2)
fit1$uniquenesses
fit1 <- principal(data, nfactors=10, rotate="none")
fit1 <- principal(data, nfactors=10, rotate="none")
print(fit1, digits=2)
fit1 <- principal(data, nfactors=8, rotate="none")
print(fit1, digits=2)
M1 <- factanal(~., data=data, factors=3 , scores = "varimax")
M1 <- factanal(~., data=data, factors=3 , scores = "none")
M1
M1 <- factanal(~., data=data, factors=3 , scores = "regression")
M1
M1 <- factanal(~., data=data, factors=4 , scores = "regression")
M1
M1 <- factanal(~., data=data, factors=4 , scores = "none")
M1
M1 <- factanal(~., data = data, factors = 3 , scores = "regression")
M2 <- update(M1, factor = 3, roation = "varimax")
print(M2, digits=2, cutoff=.3, sort=TRUE)
M1 <- factanal(~., data = data, factors = 3 , scores = "regression")
M2 <- update(M1, factor = 3, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
smc(data)
smc(data)
print(cov2cor(solve(corMat)))
kmo(data)
?kmo
??kmo
library(psych)
kmo(data)
library(psych)
smc(data)
print(cov2cor(solve(corMat)))
kmo(data)
KMO(data)
cov2cor(solve(corMat))
?cov2cor
KMO(data)$ImCov
solve(corMat)
KMO(data)
KA <- MO(data)
A <- KMO(data)
View(A)
library(rela)
install.packages('rela')
paf(data)
library(rela)
paf(data)
View(data)
as.array(data)
as.data.frame.numeric(data)
class(data)
corMat
View(data)
paf(corMat)
cor2cov(KMO(data)$$ImCov)
cor2cov(KMO(data)$ImCov)
?cor2cov
cor2cov(rho,sigma)
Sys.setenv(LANG = 'en')
cor2cov(rho,sigma)
Sys.setenv(LANG = 'en')
cor2cov(KMO(data)$ImCov)
KMO(data)$ImCor
KMO(data)$ImCov
KMO(data)$ImCo23rwe
cor2cov(KMO(data)$ImCov , 14)
cor2cov(KMO(data)$ImCov, 13)
cor2cov(KMO(data)$ImCov, 14)
cov2cor(KMO(data)$ImCov)
cor2cov(KMO(data)$ImCov , 14)
cov2cor(solve(corMat))
cov2cor(KMO(data)$ImCov)
cov2cor(KMO(data)$ImCov)
cov2cor(solve(corMat))
KMO(data)$ImCov
cov2cor(KMO(data)$ImCov)
cov2cor(solve(corMat))
cov2cor(KMO(data)$ImCov)
cor2cov(KMO(data)$ImCov)
KMO(data)$ImCov
fac_data <- data[, -c('trustCivService', 'trustRelative', 'trustOther',
'trustNatGov', 'trustParty')]
fac_data <- data[, c('trustCivService', 'trustRelative', 'trustOther',
'trustNatGov', 'trustParty')]
fac_data <- data[, -c('trustCivService', 'trustRelative', 'trustOther',
'trustNatGov', 'trustParty')]
fac_data <- data[, -c(2,1))]
fac_data <- data[, -c(2,1)]
fac_data <- data[, -c(5, 12, 14, 2, 3))]
fac_data <- data[, -c(5, 12, 14, 2, 3)]
View(fac_data)
M1 <- factanal(~., data = fac_data, factors = 3 , scores = "regression")
M2 <- update(M1, factor = 3, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
fit1 <- principal(fac_data, nfactors = 9, rotate="none")
fit1
M1 <- factanal(~., data = fac_data, factors = 2 , scores = "regression")
M2 <- update(M1, factor = 2, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
fac_data <- data[, -c(5, 12, 14, 2, 4, 3)]
fit1 <- principal(fac_data, nfactors = 9, rotate="none")
fit1
M1 <- factanal(~., data = fac_data, factors = 2 , scores = "regression")
M2 <- update(M1, factor = 2, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
fac_data <- data[, -c(5, 12, 14, 2, 10, 3)]
fit1 <- principal(fac_data, nfactors = 9, rotate="none")
fit1
M1 <- factanal(~., data = fac_data, factors = 2 , scores = "regression")
M2 <- update(M1, factor = 2, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
fac_data <- data[, -c(5, 12, 14, 2, 11, 3)]
fit1 <- principal(fac_data, nfactors = 9, rotate="none")
fit1
M1 <- factanal(~., data = fac_data, factors = 2 , scores = "regression")
M2 <- update(M1, factor = 2, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
fac_data <- data[, -c(5, 12, 14, 2, 3)]
fit1 <- principal(fac_data, nfactors = 9, rotate="none")
fit1
M2 <- update(M1, factor = 2, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
fac_data <- data[, -c(5, 12, 14, 2, 3)]
fit1 <- principal(fac_data, nfactors = 9, rotate="none")
fit1
fit1
M1 <- factanal(~., data = fac_data, factors = 3 , scores = "regression")
M1 <- factanal(~., data = fac_data, factors = 3 , scores = "regression")
M2 <- update(M1, factor = 3, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
smc(data)
fac_data <- data[, -c(5, 12, 2, 3)]
fit1 <- principal(fac_data, nfactors = 9, rotate="none")
fit1
fit1
M1 <- factanal(~., data = fac_data, factors = 3 , scores = "regression")
M2 <- update(M1, factor = 3, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
M1 <- factanal(~., data = data, factors = 3 , scores = "regression")
M2 <- update(M1, factor = 3, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
M1 <- factanal(~., data = data, factors = 3 , scores = "regression")
M2 <- update(M1, factor = 3, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
M1 <- factanal(~., data = data, factors = 14 , scores = "regression")
M2 <- update(M1, factor = 14, roation = "varimax", SMC = T)
print(M2, digits=2, cutoff=.3, sort=TRUE)
fit1 <- principal(data, nfactors = 14, rotate="none")
print(fit1, digits=2)
fit1$uniquenesses
fit1 <- principal(data, nfactors = 14, rotate="none")
print(fit1, digits=2)
fit1 <- principal(fac_data, nfactors = 14, rotate="none")
print(fit1, digits=2)
pcafit <- princomp(~., data=data, cor=TRUE)
summary(pcafit) # print variance accounted for
summary(pcafit) # print variance accounted for
loadings(pcafit) # pc loadings
pcafit <- princomp(~., data=data, cor=TRUE)
summary(pcafit) # print variance accounted for
plot(pcafit,type="lines")
loadings(pcafit) # pc loadings
plot(pcafit,type="lines")
dev.off()
screeplot(pcafit,type="lines")
a <- plot(pcafit,type="lines")
a
