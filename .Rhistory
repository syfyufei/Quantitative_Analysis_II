birthday[3]
birthday[1]
as.Date(birthday[2], format = '%m - %d')
birthday[2]
# y: D13a 请您回想一下，在过去一年中，您是否受过到政府有关部门或工作人员的不公正对待？
#
#
# x3: A50 您觉得自己说普通话的能力是什么水平？
#
birthday <- paste(data$a3A, '-', data$a3b,'-' , data$a3c)
birthday[2]
# y: D13a 请您回想一下，在过去一年中，您是否受过到政府有关部门或工作人员的不公正对待？
#
#
# x3: A50 您觉得自己说普通话的能力是什么水平？
#
birthday <- paste(data$a3a, '-', data$a3b,'-' , data$a3c)
birthday[2]
as.Date(birthday[2], format = '%Y - %m - %d')
Zodiac(as.Date(birthday[2], format = '%Y - %m - %d'))
install.packages('DescTools')
library(DescTools)
Zodiac(as.Date(birthday[2], format = '%Y - %m - %d'))
temp <- Zodiac(as.Date(birthday[2], format = '%Y - %m - %d'))
class(temp)
data$a59e
birthday <- Zodiac(as.Date(birthday, format = '%Y - %m - %d'))
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd12b')]
View(mydata)
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$birthday <- Zodiac(as.Date(mydata$birthday), format = '%Y - %m - %d')
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$birthday <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
is.na(mydata)
mydata <- mydata[is.na(mydata),]
mydata <- mydata[!is.na(mydata),]
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd12b')]
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- mydata[!is.na(mydata),]
is.na
?is.na
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd12b')]
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- na.omit(mydata)
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd12c')]
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- na.omit(mydata)
?ifelse
mydata %>% mutate( cpcer = ifelse(a10 == '中共党员', TRUE, FALSE))
library(dplyr)
mydata %>% mutate( cpcer = ifelse(a10 == '中共党员', TRUE, FALSE))
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '中共党员', TRUE, FALSE))
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE))
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(parade = ifelse( d12c == '从未参与', FALSE, TRUE))
unique(mydata$d12c)
unique(mydata$a10)
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd12c')]
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
library(foreign)
library(DescTools)
library(dplyr)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
?omit.na
na.omit()
data <- read.dta('./HW1/cgss2010_12.dta') %>% na.omit()
data <- read.dta('./HW1/cgss2010_12.dta')
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd12c')] %>%
na.omit()
?na.omit
unique(mydata$d12c)
unique(mydata$a10)
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' , ]
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd12c')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' , ]
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(parade = ifelse( d12c == '从未参与', FALSE, TRUE))
temp <- mydata[, c('a8a', 'zadioc', 'cpcer', 'parade')]
temp <- mydata[, c('a8a', 'zodiac', 'cpcer', 'parade')]
mydata <- mydata[, c('a8a', 'zodiac', 'cpcer', 'parade')]
names(mydata) <- c('income', 'zodiac', 'cpcer', 'parade')
#-----------1.4---------
m1<-glm(parade ~ income + cpcer + zodiac,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(parade ~ 1,
family = binomial(link = "logit"), data = mydata)
View(m1)
summary(m1)
summary(m0)
View(data)
#-----------1.4---------
m1 <- glm(parade ~ income + cpcer + as.character(zodiac),
family = binomial(link = "logit"), data = mydata)
summary(m1)
?as.factor()
as.factor(zodiac,ordered = FALSE)
as.factor(zodiac,ordered = None)
as.factor(zodiac)
as.factor(mydata$zodiac)
as.factor(mydata$zodiac ,levels = FALSE)
as.factor(mydata$zodiac ,levels = none)
as.factor(mydata$zodiac ,levels = NULL)
as.factor(mydata$zodiac ,ordered = NULL)
as.factor(mydata$zodiac )
#-----------1.4---------
m1 <- glm(parade ~ income + cpcer + as.factor(zodiac),
family = binomial(link = "logit"), data = mydata)
summary(m1)
data$d13a
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd13a')] %>%
na.omit()
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE))
mydata <- mydata[, c('a8a', 'zodiac', 'cpcer', 'parade')]
mydata <- mydata[, c('a8a', 'zodiac', 'cpcer', 'd13a')]
names(mydata) <- c('income', 'zodiac', 'cpcer', 'parade')
#-----------1.4---------
m1 <- glm(parade ~ income + cpcer + zodiac,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(parade ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd13a')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d13a != '拒绝回答' &
mydata$d13a != '不知道' , ]
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(parade = ifelse( d13a == '是', TRUE, TRUE))
mydata <- mydata[, c('a8a', 'zodiac', 'cpcer', 'd13a')]
names(mydata) <- c('income', 'zodiac', 'cpcer', 'parade')
#-----------1.4---------
m1 <- glm(parade ~ income + cpcer + zodiac,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(parade ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
summary(m0)
summary(m1)
data$a44
data$d19b
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd19b')] %>%
na.omit()
View(mydata)
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d19b != '拒绝回答' &
mydata$d19c != '不知道' , ]
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd19b')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' , ]
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd19b')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d19b != '拒绝回答' &
mydata$d19c != '不知道' , ]
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd19b')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d19b != '拒绝回答' &
mydata$d19b != '不知道' , ]
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(parade = ifelse( d19b == '担任过', FALSE, TRUE))
mydata <- mydata[, c('a8a', 'zodiac', 'cpcer', 'parade')]
names(mydata) <- c('income', 'zodiac', 'cpcer', 'parade')
#-----------1.4---------
m1 <- glm(parade ~ income + cpcer + zodiac,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(parade ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
#-----------1.4---------
m1 <- glm(parade ~ income + cpcer + zodiac,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(parade ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
summary(m0)
summary(m1)
summary(m0)
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd12c')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' , ]
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(parade = ifelse( d12c == '从未参与', FALSE, TRUE))
mydata <- mydata[, c('a8a', 'zodiac', 'cpcer', 'parade')]
names(mydata) <- c('income', 'zodiac', 'cpcer', 'parade')
#-----------1.4---------
m1 <- glm(parade ~ income + cpcer + zodiac,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(parade ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
coef(m1)
options(digits=200)
options(scipen = 200)
coef(m1)
confint(m1)
options(scipen = 200, digits = 2)
confint(m1)
exp(coef(m1))
summary(m1)
#--------1.5-----------
chisq.test(income,parade, data = mydata)
#--------1.5-----------
chisq.test(income,parade)
?chisq.test
#--------1.5-----------
chisq.test(mydata$income, mydata$parade)
library(lmtest)
#--------1.5-----------
anova(m1, test="Chisq")
#---------1.6----------
PseudoR2(m1)
names(df) <- c('', '', )
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'a49')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$149 != '拒绝回答缺失值' &
mydata$d12c != '不知道' , ]
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$a49 != '拒绝回答缺失值' &
mydata$a49 != '不知道' , ]
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$a49 != '拒绝回答缺失值' &
mydata$a49 != '不知道缺失值' , ]
View(mydata)
mydata$birthday <- paste(mydata$a3a, '-', mydata$a3b,'-' , mydata$a3c)
mydata$zodiac <- Zodiac(as.Date(mydata$birthday, format = '%Y - %m - %d'))
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(parade = ifelse( d12c == '从未参与', FALSE, TRUE))
mydata <- data[,c('a49', 'a8a', 'd12c')] %>%
na.omit()
mydata <- data[,c('a49', 'a8a', 'a10','d12c')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' &
mydata$a49 != '拒绝回答缺失值' &
mydata$a49 != '不知道缺失值', ]
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(parade = ifelse( d12c == '从未参与', FALSE, TRUE))
mydata <- mydata[, c('a8a', 'a49', 'cpcer', 'parade')]
names(mydata) <- c('income', 'zodiac', 'cpcer', 'parade')
#-----------1.4---------
m1 <- glm(parade ~ income + cpcer + zodiac,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(parade ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
exp(coef(m1))
#--------1.5-----------
anova(m1, test="Chisq")
#---------1.6----------
PseudoR2(m1)
install.packages("BSDA")
library(BSDA)
#---------1.7----------
z.test(m1, conf.level=0.95)
#---------1.7----------
z.test(m1, sigma.x=0, conf.level=0.95)
#---------1.7----------
z.test(m1, sigma.x=0.5, conf.level=0.95)
coef(m1)[1]
coef(m1)[2]
coef(m1)[2] * 1
coef(m1)[2] * 2
coef(m1)[2] * 3
coef(m1)[2] * 5
mydata <- data[,c('a3a', 'a3b', 'a3c', 'a10', 'a8a', 'd12c')] %>%
na.omit()
mydata <- data[,c('a49', 'a8a', 'a10','d12c')] %>%
na.omit()
mydata <- data[,c('a49', 'a8a', 'a10','d12c')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' , ]
mydata <- data[,c('a49', 'a8a', 'a10','d12c')] %>%
na.omit()
mydata <- mydata[mydata$a10 != '拒绝回答缺失值' &
mydata$d12c != '拒绝回答' &
mydata$d12c != '不知道' &
mydata$a49 != '拒绝回答缺失值' &
mydata$a49 != '不知道缺失值', ]
mydata <- mydata %>% mutate( cpcer = ifelse(a10 == '共产党员', TRUE, FALSE)) %>%
mutate(protest = ifelse( d12c == '从未参与', FALSE, TRUE))
mydata <- mydata[, c('a8a', 'a49', 'cpcer', 'protest')]
names(mydata) <- c('income', 'nation_lan', 'cpcer', 'protest')
#-----------1.4---------
m1 <- glm(protest ~ income + cpcer + nation_lan,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(protest ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
#--------1.9-----------
invlogit<-function(x){
1/(1+exp(-x))
}
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,1), yaxs = 'i')
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,1), yaxs = 'i', data = mydata)
# logLik()
attach(mydata)
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,1), yaxs = 'i')
points(x = income,  y = jitter(protest, factor = 0.2), pch = '.')
mydata$income <- as.integer(mydata$income)
#-----------1.4---------
m1 <- glm(protest ~ income + cpcer + nation_lan,
family = binomial(link = "logit"), data = mydata)
m0 <- glm(protest ~ 1,
family = binomial(link = "logit"), data = mydata)
summary(m1)
summary(m0)
coef(m1)
confint(m1)
exp(coef(m1))
exp(confint(m1))
#--------1.5-----------
anova(m1, test="Chisq")
#---------1.6----------
PseudoR2(m1)
#---------1.7----------
z.test(m1, sigma.x=0.5, conf.level=0.95)
#--------1.9-----------
invlogit<-function(x){
1/(1+exp(-x))
}
# logLik()
attach(mydata)
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,1), yaxs = 'i')
points(x = as.income,  y = jitter(protest, factor = 0.2), pch = '.')
points(x = income,  y = jitter(protest, factor = 0.2), pch = '.')
class(income)
mydata$income <- as.numeric(mydata$income)
# logLik()
attach(mydata)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,1), yaxs = 'i')
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE,  yaxs = 'i')
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE,  yaxs = 'i')
points(x = income,  y = jitter(protest, factor = 0.2), pch = '.')
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,10000), yaxs = 'i')
points(x = income,  y = jitter(protest, factor = 0.2), pch = '.')
points(x = income,  y = jitter(protest, factor = 0.2), pch = '.')
protest
points(x = income,  y = jitter(as.numeric(protest), factor = 0.2), pch = '.')
points(x = income,  y = jitter(as.numeric(protest), factor = 0.8), pch = '.')
points(x = income,  y = jitter(as.numeric(protest), factor = 1), pch = '.')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
coef(M1)[2]
coef(M1)[2]
coef(m1)[2]
coef(m1)[3]
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(M1)[1] + coef(M1)[2] * x + coef(M1)[3] * TRUE), from = min(income), to = max(income), add = TRUE)
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE), from = min(income), to = max(income), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * FALSE), from = min(income), to = max(income), add = TRUE)
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * x), from = min(income), to = max(income), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * x), from = min(income), to = max(income), add = TRUE)
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * x), from = min(income), to = max(income), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * x), from = min(income), to = max(income), add = TRUE)
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
dev.off()
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
dev.on()
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
coef(m1)[1]
coef(m1)[2]
coef(m1)[3]
coef(m1)[4]
summary(m1)
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE + coef(m1)[4] * '很好'), from = min(income), to = max(income), add = TRUE)
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE ), from = min(income), to = max(income), add = TRUE)
dev.off()
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
coef(m1)[4] * 4
coef(m1)[4] * 1
coef(m1)[4] * 5
coef(m1)[4] * 1
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * FALSE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE)
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=2)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * FALSE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=1)
axis(1, at = seq(17,90,by=20))
axis(2, at = seq(0,1,by=0.5))
dev.off()
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
axis(2, at=c(0,0.5,1))
axis(1)
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=2)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * FALSE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=1)
text(x=max(income),y=coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE + coef(m1)[4] * 1),"µÝ½»¹ýÈëµ³ÉêÇëÊé",adj=0,xpd=NA)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1), labels=c("female", "male"),
adj=0, xpd=NA)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1), labels=c("female", "male"),
adj=0, xpd=NA)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1), labels=c("非党员", "党员"),
adj=0, xpd=NA)
dev.off()
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
axis(2, at=c(0,0.5,1))
axis(1)
# curve(invlogit(coef(M2)[1] + coef(M2)[2] * x), from = min(dist100), to = max(dist100), add = TRUE)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * TRUE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=2)
curve(invlogit(coef(m1)[1] + coef(m1)[2] * x + coef(m1)[3] * FALSE + coef(m1)[4] * 1), from = min(income), to = max(income), add = TRUE, col=1)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1), labels=c("非党员", "党员"),
adj=0, xpd=NA)
#---------------interaction term----------
#-----------1.4---------
m2 <- glm(protest ~ income + cpcer + nation_lan + income:cpcer,
family = binomial(link = "logit"), data = mydata)
m2
#---------------interaction term----------
#-----------1.4---------
m2 <- glm(protest ~ income + cpcer + nation_lan + income:nation_lan,
family = binomial(link = "logit"), data = mydata)
m2
summary(m2)
#---------------interaction term----------
#-----------1.4---------
m2 <- glm(protest ~ income + cpcer + nation_lan + income:cpcer,
family = binomial(link = "logit"), data = mydata)
summary(m2)
#---------------interaction term----------
#-----------1.4---------
m2 <- glm(protest ~ income + cpcer + nation_lan + cpcer:nation_lan,
family = binomial(link = "logit"), data = mydata)
summary(m2)
#---------------interaction term----------
#-----------1.4---------
m2 <- glm(protest ~ income + cpcer + nation_lan + cpcer:income,
family = binomial(link = "logit"), data = mydata)
summary(m2)
#--------1.5-----------
anova(m2, test="Chisq")
#---------1.6----------
PseudoR2(m2)
#---------1.7----------
z.test(m2, sigma.x=0.5, conf.level=0.95)
dev.off()
par(mar=c(3,3,3,2), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(x = income, y = protest, type = 'n', xlab = 'income', ylab = 'protest', axes = FALSE,
frame.plot = TRUE, xlim = c (0,9999999), yaxs = 'i')
points(x = income,  y = jitter(as.numeric(protest), factor = 1.5), pch = '.')
coef(m2)[6]
coef(m2)[7]
coef(m2)[8]
curve(invlogit(coef(m2)[1] + coef(m2)[2] * x + coef(m2)[3] * TRUE + coef(m2)[4] * 1 + coef(m2)[8] * 1 * x), from = min(income), to = max(income), add = TRUE, col=2)
curve(invlogit(coef(m2)[1] + coef(m2)[2] * x + coef(m2)[3] * FALSE + coef(m2)[4] * 1), from = min(income), to = max(income), add = TRUE, col=1)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1 +
coef(m2)[8] *  c(0,1) * x), labels=c("非党员", "党员"), adj=0, xpd=NA)
text(x = max(income), y = invlogit( coef(m1)[1] + coef(m1)[2] * max(income) + coef(m1)[3] * c(0,1) + coef(m1)[4] * 1 +
coef(m2)[8] *  c(0,1) * max(income)), labels=c("非党员", "党员"), adj=0, xpd=NA)
