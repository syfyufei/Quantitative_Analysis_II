mutate(age = 2010-a3a) %>%
filter(age > 17) %>%
# filter(a62 < 9999996) %>%
filter(a35 > 0) %>%
mutate(gender = a2, income = a62, fair = a35) %>%
dplyr::select(c('gender','age','income','fair'))
age <- fair_data$age
gender <- fair_data$gender
fair_data <- data %>%
dplyr::select(c(a2,  # gender , 1 = male , 2 = female
a3a,  # age
# 'a8a', # income
a62, # income
a35  # fair
)) %>%
mutate(age = 2010-a3a) %>%
filter(age > 17) %>%
# filter(a62 < 9999996) %>%
# filter(a35 > 0) %>%
mutate(gender = a2, income = a62, fair = a35) %>%
dplyr::select(c('gender','age','income','fair'))
age <- fair_data$age
gender <- fair_data$gender
# temp <- as.numeric(fair_data$fair)
fair <- ifelse(fair_data$fair < 0, 0, fair_data$fair)
fair_data <- data %>%
dplyr::select(c(a2,  # gender , 1 = male , 2 = female
a3a,  # age
# 'a8a', # income
a62, # income
a35  # fair
)) %>%
mutate(age = 2010-a3a) %>%
filter(age > 17) %>%
# filter(a62 < 9999996) %>%
# filter(a35 > 0) %>%
mutate(gender = a2, income = a62, fair = a35) %>%
dplyr::select(c('gender','age','income','fair'))
age <- fair_data$age
gender <- fair_data$gender
# temp <- as.numeric(fair_data$fair)
fair <- ifelse(fair_data$fair < 0, NA, fair_data$fair)
income <- ifelse(fair_data$income > 9999996, NA, fair_data$income)
probs <- c(0, 0.07, 0.25, 0.5, 0.75, 0.93, 1)
kpts <- quantile(income, prob=probs, na.rm=TRUE)
hinc <- as.numeric(cut(income, breaks=kpts, labels = 1:6, right=TRUE))
loghinc <- log(income+1)
fair_data_na <- cbind.data.frame(fair, gender, age, hinc, loghinc)
fair_data <- na.exclude(cbind.data.frame(fair, gender, age, hinc, loghinc))
ggplot(fair_data) +
geom_point(aes(x= fair, y = hinc, color = as.character(gender)),
position = position_jitter())
ggplot(fair_data) +
geom_point(aes(x= fair, y = hinc, color = age),
position = position_jitter())
library(MASS)
M0 <- polr(ordered(fair)~1, method = "logistic", data = fair_data)
summary(M0)
M1 <- polr(ordered(fair) ~ gender + age + hinc, data = fair_data,  method = "logistic", Hess=TRUE)
nullDev <- deviance(M0)
dev <- deviance(M1)
pR2 <- (nullDev-dev)/nullDev
LR <- nullDev - dev
k <- length(coef(M1))
prob <- pchisq(LR, df=k-1, lower.tail = FALSE)
M2 <- polr(ordered(fair) ~ gender + age + loghinc, data=fair_data_na,  method = "logistic")
newDat <- cbind.data.frame(gender = rep(1, 1000), age=rep(40, 1000), loghinc = seq(0,16, length=1000))
phat <- predict(M2, newdata = newDat, type="probs")
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(0,0, ylim=c(0,1), xlim=range(loghinc, na.rm=TRUE), type="n",
ylab="predictive probabilities", xlab="log(househould income)", xaxs="i", yaxs="i")
for(i in 1:5){
lines(x=newDat$loghinc, y=phat[,i], col=i)
}
for(i in 1:5){
text(x=16, y=phat[1000, i], labels=paste("Pr(happy=", i, ")", sep=""), xpd=NA, adj=0, col=i)
}
legend("topright", col=1:5, lty=1, legend=paste("Pr(happy=", 1:5, ")", sep=""))
library(brant)
brant(M1)
brant(M2)
library(nnet)
M3 <- multinom(factor(fair) ~ 1, data = fair_data_na)
summary(M3)
summary(M4)
nullDev <- deviance(M3)
dev <- deviance(M4)
pR2 <- (nullDev- dev) / nullDev
pR2 <- 1 - logLik(M4)/logLik(update(M4, .~1))
M4 <- multinom(factor(fair) ~ age + gender + loghinc, data=fair_data_na, Hess=TRUE)
summary(M4)
nullDev <- deviance(M3)
dev <- deviance(M4)
pR2 <- (nullDev- dev) / nullDev
pR2 <- 1 - logLik(M4)/logLik(update(M4, .~1))
pR2 <- 1 - logLik(M4)/logLik(update(M4, .~1))
LR <- nullDev - dev
LR <- nullDev - dev
k <- length(coef(M4))
prob <- pchisq(LR, df=k-2, lower.tail = FALSE)
exp(coef(M4))
newDat <- cbind.data.frame(gender = seq(1, 1000), age=rep(40, 1000), loghinc = seq(0,16, length=1000))
phat <- predict(M4, newdata = newDat, type="probs")
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(0,0, ylim=c(0,1), xlim=range(loghinc, na.rm=TRUE), type="n",
ylab="predictive probabilities", xlab="log(househould income)", xaxs="i", yaxs="i")
for(i in 1:5){
lines(x=newDat$loghinc, y=phat[,i], col=i)
}
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(0,0, ylim=c(0,1), xlim=range(loghinc, na.rm=TRUE), type="n",
ylab="predictive probabilities", xlab="log(househould income)", xaxs="i", yaxs="i")
for(i in 1:5){
lines(x=newDat$loghinc, y=phat[,i], col=i)
}
for(i in 1:5){
text(x=16, y=phat[1000, i], labels=paste("Pr(happy=", i, ")", sep=""), xpd=NA, adj=0, col=i)
}
legend("topright", col=1:5, lty=1, legend=paste("Pr(happy=", 1:5, ")", sep=""))
library(mnlogit)
install.packages('mnlogit')
install.packages('mlogit')
install.packages("mlogit")
install.packages("mlogit")
install.packages("mlogit")
# Hausman McFaden IIA test
library(mlogit)
fair_data_hausman <- mlogit.data(fair_data, choice = "shopping", shape = "wide", sep="_", alt.levels = 1:4)
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:4)
View(fair_data_hausman)
View(fair_data_na)
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:3)
M3 <- mlogit(fair ~ 1 | age + gender + loghinc + , data=fair_data_hausman)
M4 <- mlogit(fair ~ 1 | age + gender + loghinc + , data=fair_data_hausman)
M4 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman)
M5 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman, alt.subset = c(1,2))
mlogit:::hmftest(M3, M4)
M3
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:4)
M1
View(M1)
exp(coef(M1))
newDat_male <- cbind.data.frame(male = 1, age= 40, loghinc =  mean_inc ))
newDat_male <- cbind.data.frame(male = 1, age= 40, loghinc =  mean_inc )
# phatMat <- predict(M1, newdata = fair_data, type = "probs")
# xMat <- with(fair_data, cbind(gender, age, hinc))
# z <- xMat%*%as.matrix(coef(M1))
# resids <- fair_data$fair - z
# hist(resids)
mean_inc <- mean(fair_data$loghinc)
newDat_female <- cbind.data.frame(male = 2, age= 40, loghinc =  mean_inc )
phat <- predict(M2, newdata = newDat, type="probs")
phat
newDat <- cbind.data.frame(gender = rep(1, 1000), age=rep(40, 1000), loghinc = seq(0,16, length=1000))
phat <- predict(M2, newdata = newDat, type="probs")
phat
newDat <- cbind.data.frame(gender = rep(1, 1000), age=rep(40, 1000), loghinc = seq(0,16, length=1000))
phat <- predict(M2, newdata = newDat, type="probs")
phat
phat <- predict(M2, newdata = newDat_male, type="probs")
newDat_male <- cbind.data.frame(male = 1, age= 40, loghinc =  mean_inc )
phat <- predict(M2, newdata = newDat_male, type="probs")
newDat_male <- cbind.data.frame(gender = 1, age= 40, loghinc =  mean_inc )
phat <- predict(M2, newdata = newDat_male, type="probs")
phat
class(phat)
as.data.frame(phat)
newDat_male <- cbind.data.frame(gender = c(1, 2), age= rep(40,2), loghinc =  rep(mean_inc,2) )
phat <- predict(M2, newdata = newDat, type="probs")
as.data.frame(phat)
newDat <- cbind.data.frame(gender = c(1, 2), age= rep(40,2), loghinc =  rep(mean_inc,2) )
phat <- predict(M2, newdata = newDat, type="probs")
phat
ggplot(as.data.frame(phat)) +
geom_point()
library(tidyverse)
as.data.frame(phat)
library(reshape2)
melt(as.data.frame(phat))
ggplot(df) +
geom_point(aes(variable, value))
ggplot(df) +
geom_point(aes(x = variable, y = value))
df <- as.data.frame(phat)
ggplot(df) +
geom_point(aes(x = variable, y = value))
ggplot(df) +
geom_point(aes(x = variable, y = value))
df
df <- melt(as.data.frame(phat))
ggplot(df) +
geom_point(aes(x = variable, y = value))
df
df$gender <- c('male', 'female')
ggplot(df) +
geom_point(aes(x = variable, y = value , fill = gender))
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender))
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),position = position_dodge())
geom_point(aes(x = variable, y = value , color = gender),position = posi
ggplot(df) +
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),))
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender))
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),position = position_identity())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10, position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , fill = gender),
size = 10, position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10, position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10, position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10, position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10, shape = 1,
position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10,
# shape = 1,
position = position_jitter())
mean_inc <- mean(fair_data$loghinc)
newDat <- cbind.data.frame(gender = c(1, 2), age= rep(40,2), loghinc =  rep(mean_inc,2) )
phat <- predict(M4, newdata = newDat, type="probs")
library(reshape2)
df <- melt(as.data.frame(phat))
newDat <- cbind.data.frame(gender = c(1, 2), age= rep(40,2), loghinc =  rep(mean_inc,2) )
phat <- predict(M4, newdata = newDat, type="probs")
newDat <- cbind.data.frame(gender = rep(c(1, 2), 5), age= rep(40,10), loghinc =  rep(mean_inc,10 )
phat <- predict(M4, newdata = newDat, type="probs")
phat <- predict(M4, newdata = newDat, type="probs")
newDat <- cbind.data.frame(gender = rep(c(1, 2), 5), age= rep(40,10), loghinc =  rep(mean_inc,10 )
newDat <- cbind.data.frame(gender = rep(c(1, 2), 5), age= rep(40,10), loghinc =  rep(mean_inc,10 ))
newDat <- cbind.data.frame(gender = rep(c(1, 2), 5), age= rep(40,10), loghinc =  rep(mean_inc,10 ))
phat <- predict(M4, newdata = newDat, type="probs")
library(reshape2)
df <- melt(as.data.frame(phat))
phat
df <- melt(as.data.frame(phat))
DF
df
df$gender <- c('male', 'female')
df
df <- melt(as.data.frame(phat))
phat
class(phat)
as.data.frame(phat)
?melt
df <- melt(as.tibble(phat))
df <- melt(as.data.frame(phat))
phat <- predict(M4, newdata = newDat, type="probs")
phat
df <- melt(as.data.frame(phat))
df
df$gender <- c('male', 'female')
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10,
# shape = 1,
position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10,
# shape = 1,
position = position_jitter())
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10,
# shape = 1,
position = position_jitter())
newDat <- cbind.data.frame(gender = rep(c(1, 2), 2), age= rep(40,4), loghinc =  rep(mean_inc,4 ))
phat <- predict(M4, newdata = newDat, type="probs")
library(reshape2)
df <- melt(as.data.frame(phat))
df$gender <- c('male', 'female')
ggplot(df) +
geom_point(aes(x = variable, y = value , color = gender),
size = 10,
# shape = 1,
position = position_jitter())
data <- read_dta('./cgss2010_14.dta')
fair_data <- data %>%
dplyr::select(c(a2,  # gender , 1 = male , 2 = female
a3a,  # age
# 'a8a', # income
a62, # income
a35  # fair
)) %>%
mutate(age = 2010-a3a) %>%
filter(age > 17) %>%
# filter(a62 < 9999996) %>%
# filter(a35 > 0) %>%
mutate(gender = a2, income = a62, fair = a35) %>%
dplyr::select(c('gender','age','income','fair'))
gender <- fair_data$gender
fair_data <- data %>%
dplyr::select(c(a2,  # gender , 1 = male , 2 = female
a3a,  # age
# 'a8a', # income
a62, # income
a35  # fair
)) %>%
mutate(age = 2010-a3a) %>%
filter(age > 17) %>%
# filter(a62 < 9999996) %>%
# filter(a35 > 0) %>%
mutate(gender = a2, income = a62, fair = a35) %>%
dplyr::select(c('gender','age','income','fair'))
data <- read_dta('./cgss2010_14.dta')
library(tidyverse)
library(haven)
data <- read_dta('./cgss2010_14.dta')
data <- read_dta('./cgss2010_14.dta')
fair_data <- data %>%
dplyr::select(c(a2,  # gender , 1 = male , 2 = female
a3a,  # age
# 'a8a', # income
a62, # income
a35  # fair
)) %>%
mutate(age = 2010-a3a) %>%
filter(age > 17) %>%
# filter(a62 < 9999996) %>%
# filter(a35 > 0) %>%
mutate(gender = a2, income = a62, fair = a35) %>%
dplyr::select(c('gender','age','income','fair'))
table(gender)
gender <- fair_data$gender
table(gender)
gender <- ifelse(fair_data$gender == 1, 1, 0)
table(gender)
# temp <- as.numeric(fair_data$fair)
fair <- ifelse(fair_data$fair < 0, NA, fair_data$fair)
income <- ifelse(fair_data$income > 9999996, NA, fair_data$income)
probs <- c(0, 0.07, 0.25, 0.5, 0.75, 0.93, 1)
kpts <- quantile(income, prob=probs, na.rm=TRUE)
hinc <- as.numeric(cut(income, breaks=kpts, labels = 1:6, right=TRUE))
loghinc <- log(income+1)
fair_data_na <- cbind.data.frame(fair, gender, age, hinc, loghinc)
fair_data <- na.exclude(cbind.data.frame(fair, gender, age, hinc, loghinc))
age <- fair_data$age
fair_data_na <- cbind.data.frame(fair, gender, age, hinc, loghinc)
fair_data <- na.exclude(cbind.data.frame(fair, gender, age, hinc, loghinc))
library(MASS)
M0 <- polr(ordered(fair)~1, method = "logistic", data = fair_data)
summary(M0)
M1 <- polr(ordered(fair) ~ gender + age + hinc, data = fair_data,  method = "logistic", Hess=TRUE)
summary(M1)
exp(coef(M1))
library(nnet)
M3 <- multinom(factor(fair) ~ 1, data = fair_data_na)
summary(M3)
summary(M4)
nullDev <- deviance(M3)
dev <- deviance(M4)
pR2 <- (nullDev- dev) / nullDev
pR2 <- 1 - logLik(M4)/logLik(update(M4, .~1))
LR <- nullDev - dev
k <- length(coef(M4))
M4 <- multinom(factor(fair) ~ age + gender + loghinc, data=fair_data_na, Hess=TRUE)
summary(M4)
nullDev <- deviance(M3)
dev <- deviance(M4)
pR2 <- (nullDev- dev) / nullDev
pR2 <- 1 - logLik(M4)/logLik(update(M4, .~1))
pR2 <- 1 - logLik(M4)/logLik(update(M4, .~1))
LR <- nullDev - dev
k <- length(coef(M4))
prob <- pchisq(LR, df=k-2, lower.tail = FALSE)
exp(coef(M4))
brant(M1)
library(brant)
brant(M1)
brant(M2)
M2 <- polr(ordered(fair) ~ gender + age + loghinc, data=fair_data_na,  method = "logistic")
brant(M2)
pR2 <- (nullDev-dev)/nullDev
pR2
prob
M0 <- polr(ordered(fair)~1, method = "logistic", data = fair_data)
M1 <- polr(ordered(fair) ~ gender + age + hinc, data = fair_data,  method = "logistic", Hess=TRUE)
M1 <- polr(ordered(fair) ~ gender + age + hinc, data = fair_data,  method = "logistic", Hess=TRUE)
summary(M1)
nullDev <- deviance(M0)
dev <- deviance(M1)
pR2 <- (nullDev-dev)/nullDev
pR2
LR <- nullDev - dev
k <- length(coef(M1))
prob <- pchisq(LR, df=k-1, lower.tail = FALSE)
prob
pR2
exp(coef(M4))
library(mlogit)
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:4)
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:4)
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_")
M4 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman)
M5 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman, alt.subset = c(1,2,3))
mlogit:::hmftest(M3, M4)
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:3)
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:2)
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:3)
fair_data
dat <- read.dta("E:/SynologyDrive/Github/Quantitative_Analysis_II/slides/week06/cgss2010short.dta")
summary(dat)
male <- ifelse(dat$a2=="男", 1, 0)
a3a <- ifelse(dat$a3a < 17, NA, dat$a3a)
age <- 2010-a3a
table(dat$a10)
age <- 2010-a3a
library(foreign)
dat <- read.dta("E:/SynologyDrive/Github/Quantitative_Analysis_II/slides/week06/cgss2010short.dta")
summary(dat)
male <- ifelse(dat$a2=="男", 1, 0)
a3a <- ifelse(dat$a3a < 17, NA, dat$a3a)
age <- 2010-a3a
table(dat$a10)
ccpmember <- ifelse(dat$a10=="共产党员", 1, 0)
a36 <- as.numeric(dat$a36)
happy <- ifelse(a36<3, NA, a36-2)
a62 <- ifelse(dat$a62 > 9999996, NA, dat$a62)
probs <- c(0, 0.07, 0.25, 0.5, 0.75, 0.93, 1)
kpts <- quantile(a62, prob=probs, na.rm=TRUE)
hinc <- as.numeric(cut(a62, breaks=kpts, labels = 1:6, right=TRUE))
kpts2 <- quantile(a62, prob=c(0,1/6,2/6,3/6,4/6,5/6,1), na.rm=TRUE)
hinc2 <- as.numeric(cut(a62, breaks=kpts2, labels = 1:6, right=TRUE))
loghinc <- log(a62+1)
c7b <- ifelse(as.numeric(dat$c7b) %in% c(1, 6, 7, 8), NA, as.numeric(dat$c7b))
shopping <- c7b-1
dat1 <- cbind.data.frame(shopping, age, male, loghinc, ccpmember)
dat2 <- na.exclude(dat1)
dat2
#library(mnlogit)
dat3 <- mlogit.data(dat2, choice = "shopping", shape = "wide", sep="_", alt.levels = 1:4)
library(mlogit)
#library(mnlogit)
dat3 <- mlogit.data(dat2, choice = "shopping", shape = "wide", sep="_", alt.levels = 1:4)
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:4)
M4 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman)
M4 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman)
M5 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman, alt.subset = c(1,2,3))
mlogit:::hmftest(M3, M4)
M3 <- mlogit(shopping ~ 1 | age + male + loghinc + ccpmember, data=dat3)
M4 <- mlogit(shopping ~ 1 | age + male + loghinc + ccpmember, data=dat3, alt.subset = c(1,2,3))
mlogit:::hmftest(M3, M4)
M3
shopping
fair_data_hausman <- mlogit.data(fair_data, choice = "fair", shape = "wide", sep="_", alt.levels = 1:5)
M4 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman)
M5 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman, alt.subset = c(1,2,3,4))
M4
M5
M4 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman)
M4 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman)
M5 <- mlogit(fair ~ 1 | age + gender + loghinc, data=fair_data_hausman, alt.subset = c(1,2,3,4))
mlogit:::hmftest(M3, M4)
View(dat2)
cat("\nSmall and Hsiao test\nH0: IIA assumption is accepted\n")
smhsiaoTest(shopping ~ 1 | age + gender + loghinc  , data=fair_data, seed = 11, keepLev = c(1,2))
set.seed(seed)
smhsiaoTest <- function(formula, data, seed = 1234,
choiceVar = "fair", keepLev = c(1,2,3,4)){
set.seed(seed)
library(mlogit)
n <- dim(data)[1]
idx <- sample(1:n, n, replace=FALSE)
half <- floor(n/2)
idx1 <- idx[1:half]
idx2 <- idx[(half+1):n]
datA <- data[idx1,]
datB <- data[idx2,]
levs <- levels(as.factor(data[,choiceVar]))
datA <- mlogit.data(datA, choice = choiceVar, shape = "wide", sep="_")#, alt.levels = levs)
datB <- mlogit.data(datB, choice = choiceVar, shape = "wide", sep="_")#, alt.levels = levs)
fitA <- mlogit(formula, data=datA)
fitB <- mlogit(formula, data=datB)
betaF <- coef(fitA) * 1/sqrt(2) + coef(fitB)*(1-1/sqrt(2))
fitC <- mlogit(formula, data=datB, alt.subset = keepLev)
betaR <- coef(fitC)
LL1 <- logLik(fitC)
uu <- names(betaR)
betaFR <- betaF[uu]
K <- length(betaR)
fitD <- mlogit(formula, data=datB, alt.subset = keepLev, start = betaFR, iterlim=0)
LL0 <- logLik(fitD)
SH <- -2*(LL0 - LL1)
prob <- pchisq(SH, df=K, lower.tail=FALSE)
out <- list("chisq" = SH[1], "df" = K, "pValue" = prob[1], "LLU" = LL0, "LLR" = LL1)
if(prob > 0.05){
cat("\nSmall and Hsiao test\nH0: IIA assumption is accepted\n")
} else {
cat("\nSmall and Hsiao test\nH0: IIA assumption is rejected\n")
}
return(out)
}
smhsiaoTest(shopping ~ 1 | age + gender + loghinc  , data=fair_data, seed = 11, keepLev = c(1,2))
