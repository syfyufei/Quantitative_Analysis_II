# year_w3 <- rep(2011,length(demo_w3))
# gender_w3 <- w3$se002
# # cohord_w1 <- w1$se003
# age_w3 <- w3$se003a
# edu_w3 <- w3$se005a # year
# region_w3 <- w3$se006
# dialect_w3 <- w3$se014
# income_w3 <- w3$se009
# plur_w3 <- w3$q135  #pluralism
sub_w4 <- cbind.data.frame(demo_w4,
support_w4,
city_w4,
year_w4,
gender_w4,
age_w4,
edu_w4,
region_w4,
dialect_w4,
income_w4,
plur_w4)
names(sub_w4) <- c('demo',
'support',
'city',
'year',
'gender',
'age',
'edu',
'region',
'dialect',
'income',
'plur')
dat <- bind_rows(sub_w1, sub_w2, sub_w3, sub_w4)
# clean ----
attach(dat)
dat$demo <- ifelse(dat$demo == 9 | dat$demo == 8,
NA_real_, dat$demo)
dat$support <- ifelse(dat$support == 9 |
dat$support == 8 |
dat$support == 7,
NA_real_, dat$support)
dat$city <- ifelse(dat$city == -1,
NA_real_, dat$city)
dat$age <- ifelse(dat$age == -1 |
dat$age == 99,
NA_real_, dat$age)
dat$edu <- ifelse(dat$edu == -1 |
dat$edu == 99,
NA_real_, dat$edu)
dat$year <- as.integer(dat$year)
dat <- dat %>%
mutate(religion = case_when(
region == 10 & year == 2011 ~ 8,
region == 20 ~ 9,
region == 40 ~ 7,
region == 60 ~ 6,
region == 61 ~ 3,
region == 70 ~ 3,
region == 76 ~ 2,
region == 80 ~ 10,
region == 90 ~ 10,
region == 98 ~ NA_real_,
))  # 99 regect answer
dat$dialect <- ifelse(dat$dialect == 9 |
dat$dialect == 8 |
dat$dialect == 99,
NA_real_, dat$dialect)
dat$income <- ifelse(dat$income == 97 |
dat$income == 98 |
dat$income == 99,
NA_real_, dat$income)
dat$plur <- ifelse(dat$plur == 8 |
dat$plur == 9,
NA_real_, dat$plur)
dat <- na.exclude(dat)
length(dat)
length(dat$demo)
library(stargazer)
View(attitude)
# descirbe ----
stargazer(dat)
# plot1
ggplot(data = dta) +
geom_boxplot(aes(x = demo, y = age, fill = demo))
# plot1
ggplot(data = dat) +
geom_boxplot(aes(x = demo, y = age, fill = demo))
# plot1
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = age, fill = as.factor(demo)))
# plot2
ggplot(data = dta) +
geom_point(aes(x = demo, y = support, fill = demo))
# plot2
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, fill = demo))
# plot2
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, fill = demo),
position = position_jitter())
position = position_jitterdodge()
# plot2
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, fill = demo),
position = position_jitterdodge())
# plot2
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, fill = demo),
position = position_dodge())
# plot2
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, fill = demo),
position = position_jitter())
# plot3
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, fill = city),
position = position_jitter())
# plot3
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, fill = as.factor(city)),
position = position_jitter())
View(dat)
# plot2
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = demo),
position = position_jitter())
# plot3
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(city)),
position = position_jitter())
# plot3
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(city)),
position = position_jitter())  +
geom_smooth(method = 'auto', color = 'red', se = T)
# plot3
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(city)),
position = position_jitter())  +
geom_smooth(aes(x = demo, y = support),
method = 'auto', color = 'red', se = T)
# plot3
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(city)),
position = position_jitter())  +
geom_smooth(aes(x = demo, y = support),
method = 'auto', color = 'red')
# plot3
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(city)),
position = position_jitter())  +
geom_smooth(aes(x = demo, y = support)
)
# plot4
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(plur)),
position = position_jitter())  +
geom_smooth(aes(x = demo, y = support),
method = 'auto', color = 'red', se = T)
# plot4
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(plur)),
position = position_jitter())
# plot4
ggplot(data = dat) +
geom_point(aes(x = demo, y = plur, color = as.factor(demo)),
position = position_jitter())
# plot2
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(demo)),
position = position_jitter()) +
geom_smooth(method = 'auto', color = 'red', se = T)
# plot0
ggplot(data = dat) +
geom_point(aes(x = demo, y = age, color = as.factor(demo)),
position = position_jitter())  +
geom_smooth(aes(x = demo, y = age),
method = 'auto', color = 'red', se = T)
# plot4
ggplot(data = dat) +
geom_point(aes(x = as.factor(demo), y = plur, color = as.factor(demo)),
position = position_jitter())
# plot1
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = age, fill = as.factor(demo)))
# plot4
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = plur, color = as.factor(demo)),
position = position_jitter())
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = plur, fill = as.factor(demo)))
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = support, fill = as.factor(demo)))
ggplot(data = dat) +
geom_point(aes(x = demo, y = age, color = as.factor(demo)),
position = position_jitter())  +
geom_smooth(aes(x = demo, y = age),
method = 'auto', color = 'red', se = T)
# plot1
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = age, fill = as.factor(demo)))
# plot2
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(demo)),
position = position_jitter())
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = edu, fill = as.factor(demo)))
# plot3
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(demo)),
position = position_jitter())
# plot4
ggplot(data = dat) +
geom_point(aes(x = demo, y = plur, color = as.factor(demo)),
position = position_jitter())
# plot4
ggplot(data = dat) +
geom_point(aes(x = as.factor(demo), y = plur, color = as.factor(demo)),
position = position_jitter())
ggplot(data = dat) +
geom_point(aes(x = as.factor(demo), y = as.factor(religion), color = as.factor(demo)),
position = position_jitter())
ggplot(data = dat) +
geom_point(aes(x = as.factor(demo), y = as.factor(dialect), color = as.factor(demo)),
position = position_jitter())
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = as.factor(dialect), fill = as.factor(demo)))
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = dialect, fill = as.factor(demo)))
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = religion, fill = as.factor(demo)))
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = income, fill = as.factor(demo)))
ggplot(data = dat) +
geom_point(aes(x = as.factor(demo), y = as.factor(income), color = as.factor(demo)),
position = position_jitter())
ggplot(data = dat) +
geom_point(aes(x = as.factor(demo), y = income, color = as.factor(demo)),
position = position_jitter())
# plot1
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = age, fill = as.factor(demo)))
ggplot(data = dat) +
geom_boxplot(aes(x = as.factor(demo), y = edu, fill = as.factor(demo)))
# plot2
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(demo)),
position = position_jitter())
# plot3
ggplot(data = dat) +
geom_point(aes(x = demo, y = support, color = as.factor(demo)),
position = position_jitter())
# plot4
ggplot(data = dat) +
geom_point(aes(x = as.factor(demo), y = plur, color = as.factor(demo)),
position = position_jitter())
ggplot(data = dat) +
geom_point(aes(x = as.factor(demo), y = as.factor(religion), color = as.factor(demo)),
position = position_jitter())
ggplot(data = dat) +
geom_point(aes(x = as.factor(demo), y = income, color = as.factor(demo)),
position = position_jitter())
# regression----
M0 <- lmer(demo <- 1 + age + (1|gender) + (1|city), data = dat)
# regression----
M0 <- lmer(city <- 1 + age + (1|gender) , data = dat)
class(city)
# regression----
M0 <- lmer(as.integer(city)  <- 1 + age + (1|gender) , data = dat)
# regression----
M0 <- lmer(as.integer(city) <- 1 + age + (1|gender) , data = dat)
# regression----
M0 <- lmer(as.double(city) <- 1 + age + (1|gender) , data = dat)
# regression----
M0 <- lmer(as.double(city) ~ 1 + age + (1|gender) , data = dat)
M0
# regression----
M0 <- lmer(demo ~ 1 + age + (1|gender) , data = dat)
M0
# regression----
dat <- dat %>% mutate( citizen = case_when(
demo <3 & support < 3 ~ 1
))
dat$citizen <- ifelse(dat$citizen != 1, 0, dat$citizen)
dat$citizen <- ifelse(dat$citizen == NA_real_, 0, dat$citizen)
# regression----
dat <- dat %>% mutate( citizen = case_when(
demo < 3 & support < 3 ~ 1,
demo > 2 ~ 0,
support > 2 ~ 0
))
dat
as.tibble(dat)
dat2 <- dat
M0 <- lmer(citizen ~ 1 + (1|gender) + (1|city) + age + income +
edu + (1|region) + (1|dialect), data = dat)
dat2$demo <- as.factor(dat2$demo)
dat2$citizen <- as.factor(dat2$citizen)
dat2$city   <- as.factor(dat2$city)
dat2$year   <- as.factor(dat2$year)
dat2$gender <- as.factor(dat2$gender)
dat2$region <- as.factor(dat2$region)
dat2$dialect <- as.factor(dat2$dialect)
dat2$income <- as.factor(dat2$income)
dat2$plur <- as.factor(dat2$plur)
dat2$religion <- as.factor(dat2$religion)
M0 <- lmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year), data = dat2)
M0 <- lmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year), data = dat)
dat2 <- dat
dat2$citizen <- as.factor(dat2$citizen)
M0 <- lmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year), data = dat2)
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year), data = dat2)
dat2 <- dat
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year), data = dat2)
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year),
family = binomial(link = 'logit'), data = dat2)
M0
dat2$citizen <- as.factor(dat2$citizen)
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year),
family = binomial(link = 'logit'), data = dat2)
M0
dat2$citizen <- as.factor(dat2$citizen)
dat2$city   <- as.factor(dat2$city)
dat2$year   <- as.factor(dat2$year)
dat2$gender <- as.factor(dat2$gender)
dat2$religion <- as.factor(dat2$religion)
dat2$dialect <- as.factor(dat2$dialect)
dat2$income <- as.factor(dat2$income)
dat2$plur <- as.factor(dat2$plur)
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year),
family = binomial(link = 'logit'), data = dat2)
M0
stargazer(M0)
stargazer(M0, type = 'text')
stargazer(dat)
stargazer(dat,type ='text')
stargazer(dat2,type ='text')
dat <- dat(-region)
dat <- dat[-region]
getwd
getwd()
getwd()
stargazer(dat)
stargazer(dat, type = 'text')
dat3 <- dat
dat3  <- dat3 [,8]
stargazer(dat3, type = 'text')
dat3 <- dat
dat3  <- dat3[,-8]
stargazer(dat3, type = 'text')
stargazer(M0, type = 'text')
M0
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year) + plur,
family = binomial(link = 'logit'), data = dat2)
M0
stargazer(M0, type = 'text')
fixedM0 <- broom::tidy(M0) %>% filter(effect == "fixed")
View(M0)
M0
library(modelsummary)
modelsummary(M0)
modelsummary(M0,modelsummary)
modelsummary(M0,output = "table.docx")
modelsummary(dta)
modelsummary(dat)
library("insight")
get_variance_random(study)
library("insight")
get_variance_random(M0)
?glmer()
stargazer(dat3)
stargazer(dat3, type = 'text')
stargazer(M0, type = 'text')
tidy <- broom::tidy(M0)
range(M0)
fixef(M0
)
ranef(M0)
lme4::ranef(M0)
FAN <- lme4::ranef(M0)
stargazer(FAN)
modelsummary(FAN)
Summary(M0)
summary(M0)
lme4::ranef(M0)
dat2<- dat2 %>% mutate(cohort = year - age)
View(dat2)
dat2<- dat2 %>% mutate(cohort = as.integer(year) - as.integer(age))
dat2 <- dat2[, -14]
dat2<- dat2 %>% mutate(cohort = as.numeric(year) - as.numeric(age))
dat2<- dat2 %>% mutate(cohort = as.numeric(age))
dat2<- dat2 %>% mutate(cohort = as.numeric(age) - as.numeric(year))
dat2<- dat2 %>% mutate(cohort = as.numeric(age) - as.numeric(year))
dat2<- dat2 %>% mutate(cohort = as.numeric(dat2$age) - as.numeric(dat2$year))
as.numeric(year)
as.numeric(age)
dat2<- dat2 %>% mutate(cohort = as.numeric(year) - as.numeric(age))
dat2
as.tibble(dat2)
as.integer(year)
as.integer(year) - as.integer(age)
as.integer(year) - as.integer(age)
cohort <- as.integer(year) - as.integer(age)
cohort
dat2 <- dat2[, -14]
dat$cohort <- cohort
cohort <- as.integer(dat2$year) - as.integer(dat2$year)
cohort
as.integer(dat2$year)
as.integer(dat1$year)
as.integer(dat$year)
as.integer(dat2$year)
cohort <- as.integer(dat1$year) - as.integer(dat1$year)
cohort <- as.integer(dat$year) - as.integer(dat$year)
cohort
cohort <- as.integer(dat$year) - as.integer(dat$age)
cohort
dat2$cohort <- cohort
dat2
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year) + plur + (1|cohort),
family = binomial(link = 'logit'), data = dat2)
M0
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year) + plur + (1|cohort),
family = binomial(link = 'logit'), data = dat2)
M0
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year) + plur + (1|cohort),
family = binomial(link = 'logit'), data = as.tibble(dat2))
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year) + plur + (1|cohort),
family = binomial(link = 'logit'), data = as.tibble(dat2))
()
-
M0
M0 <- glmer(citizen ~ 1 + (1|gender) + (1|city) + age + (1|income) +
edu + (1|religion) + (1|dialect) + (1|year) + plur + (1|cohort),
family = binomial(link = 'logit'), data = as.tibble(dat2))
M0
summarise(M0)
modelsummary(M0)
summary(M0)
lme4::ranef(M0)
ran <- lme4::ranef(M0)
ran
ran
ran$cohort
ran$age
ran
lme4::ranef(M0)
summary(M0)
0.005345/0.07311
0.019138 /0.13834
0.007825   /0.08846
1.013896/1.00692
0.045727 /0.21384
0.003563  /0.05969
stargazer(dat2)
stargazer(dat2, type = 'text')
install.packages('scholar')
library('scholar')
id <- 'B7vSqZsAAAAJ'
l <- get_profile(id)
l <- get_profile(id)
l <- get_profile(id)
l <- get_profile(id)
Sys.setenv(http_proxy="http://127.0.0.1:7890")
l <- get_profile(id)
l <- get_profile(id)
Sys.setenv(http_proxy="http://127.0.0.1:7890")
library(haven)
library(haven)
options(scipen=200)
library(Matching)
library(Matching)
library(MatchIt)
library(rbounds)
dat <- read_dta("cgss2010_14.dta")
View(dat)
# library(foreign)
# dta1 <- read.table('./report/data/W1.dat',header = T,sep=" ")
w1 <- read_sav('./report/data/W1.sav')
# library(foreign)
# dta1 <- read.table('./report/data/W1.dat',header = T,sep=" ")
w1 <- read_sav('./report/data/W1.sav')
# library(foreign)
# dta1 <- read.table('./report/data/W1.dat',header = T,sep=" ")
w1 <- read_sav('./report/data/W1.sav')
library(haven)
w2 <- read_sav('./report/data/W2.sav')
w2 <- read_sav('./report/data/W2.sav')
View(w2)
# library(foreign)
# dta1 <- read.table('./report/data/W1.dat',header = T,sep=" ")
w1 <- read_sav('./report/data/W1.sav')
w2 <- read_sav('./report/data/W2.sav')
w4 <- read_sav('./report/data/W4.sav')
w3 <- read_sav('./report/data/W3.sav')
View(w1)
View(w2)
View(w4)
View(w3)
View(w4)
