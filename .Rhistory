xlab = "ment", ylab = "Pr(art = 2)")
lines(x = mentFake, y=phatM, col=2)
text(x = mentFake[500], y = phatF[500], "Female", adj=0)
text(x = mentFake[500], y = phatM[500], "Male", adj=1, col=2)
#legend("topright", lty=1, col=c(1,2), legend = c("Female", "Male"))
legend(locator(1), lty=1, col=c(1,2), legend = c("Female", "Male"))
IRR <- IR[2]/IR[1]
# irr, incidence rate ratio
IRR <- function(fit, newdata){
IR <- predict(fit, newdata, type = "response") #lambdas
IRR <- IR[2]/IR[1]
return(IRR)
}
IRR(M1, dat1)
library(tidyverse)
library(tidyverse)
library(haven)
Sys.setenv(LANG='en')
dat <- read_dta("cgss2010_14.dta")
dat <- read_dta("cgss2010_14.dta")
# summary(dat)
male <- ifelse(dat$a2==1, 1,
ifelse(dat$a2==2, 0, NA)) # gender
# summary(dat)
male <- ifelse(dat$a2==1, 1,
ifelse(dat$a2==2, 0, NA)) # gender
a3a <- ifelse(dat$a3a < 17, NA, dat$a3a)  # age
age <- 2010-a3a
a62 <- ifelse(dat$a62 > 9999996, NA, dat$a62) # income
ccpmember <- ifelse(dat$a10 == 1, 1, 0) # member
probs <- c(0, 0.07, 0.25, 0.5, 0.75, 0.93, 1)
kpts <- quantile(a62, prob=probs, na.rm=TRUE)
hinc <- as.numeric(cut(a62, breaks=kpts, labels = 1:6, right=TRUE))
kpts2 <- quantile(a62, prob=c(0,1/6,2/6,3/6,4/6,5/6,1), na.rm=TRUE)
hinc2 <- as.numeric(cut(a62, breaks=kpts2, labels = 1:6, right=TRUE))
loghinc <- log(a62+1)
n35a <- ifelse(dat$n35a<0, NA, dat$n35a)
# dat1 <- cbind.data.frame("contribution"=factor(n35a), male, age, loghinc, ccpmember)
dat1 <- cbind.data.frame("contribution"=n35a, male, age, loghinc, ccpmember)
dat2 <- na.exclude(dat1)
# dat1 <- cbind.data.frame("contribution"=factor(n35a), male, age, loghinc, ccpmember)
dat1 <- cbind.data.frame("contribution"=n35a, male, age, loghinc, ccpmember)
dat2 <- na.exclude(dat1)
## 使用poisson 分析性别、年龄、收入、共产党员（自变量）对捐献次数（因变量）的关系，初步使用系数的正负关系解读因变量和自变量的关系，并说明 Peudo-R2 和似然值检验的结果。
```{r}
M1 <- glm(contribution ~ male + age + loghinc + ccpmember, data=dat1, family=poisson(link="log"))
summary(M1)
# pseudo R2
M0 <- update(M1, .~1)
devNull <- deviance(M0)
dev <- deviance(M1)
pR2 <- (devNull - dev) / devNull
pR2
# likelihood ratio test
LR <- devNull - dev
k <- length(coef(M1))
prob <- pchisq(LR, df=k-1, lower.tail = FALSE)
prob
# likelihood ratio test
LR <- devNull - dev
k <- length(coef(M1))
prob <- pchisq(LR, df=k-1, lower.tail = FALSE)
prob
## 使用事件发生率比(incidence rate ratio) 解释因变量和自变量的关系。
```{r}
# irr, incidence rate ratio
IRR <- function(fit, newdata){
IR <- predict(fit, newdata, type = "response") #lambdas
IRR <- IR[2]/IR[1]
return(IRR)
}
IRR(M1, dat1)
# predictive difference between gender
newX <- with(dat2, cbind.data.frame(male = c(0,1), age = 30, loghinc = mean(loghinc),
ccpmember = 1))
phat <- predict(M1, newdata=newX, type = "terms")
phat[2,] - phat[1,]
View(dat)
newX <- dat1
numContri <- seq(0, max(dat1$contribution))
max(dat1$contribution)
class(dat1$contribution)
table(dat1$contribution)
max(dat1$contribution)
max(as.integer(dat1$contribution))
max(as.numeric(dat1$contribution))
max(na.exclude(dat1)$contribution)
K <- length(na.exclude(dat1)$contribution)
phatN <- phatS <- rep(NA, K)
for(i in 1:K){
lamS <- predict(M1, newdata=newX, type="response")
phatS[i] <- dpois(numPaper[i], lambda=lamS)
lamN <- predict(M0, newdata=newX, type="response")
phatN[i] <- dpois(numPaper[i], lambda=lamN)
}
for(i in 1:K){
lamS <- predict(M1, newdata=newX, type="response")
phatS[i] <- dpois(numContri[i], lambda=lamS)
lamN <- predict(M0, newdata=newX, type="response")
phatN[i] <- dpois(numContri[i], lambda=lamN)
}
dat1$contribution <-
numContri <- seq(0, max(na.exclude(dat1)$contribution))
numContri <- seq(0, max(na.exclude(dat1)$contribution))
K <- length(numContri)
phatN <- phatS <- rep(NA, K)
for(i in 1:K){
lamS <- predict(M1, newdata=newX, type="response")
phatS[i] <- dpois(numPaper[i], lambda=lamS)
lamN <- predict(M0, newdata=newX, type="response")
phatN[i] <- dpois(numPaper[i], lambda=lamN)
}
for(i in 1:K){
lamS <- predict(M1, newdata=newX, type="response")
phatS[i] <- dpois(numContri[i], lambda=lamS)
lamN <- predict(M0, newdata=newX, type="response")
phatN[i] <- dpois(numContri[i], lambda=lamN)
}
lamN <- predict(M0, newdata=newX, type="response")
for(i in 1:K){
lamS <- predict(M1, newdata=newX, type="response")
phatS[i] <- dpois(numContri[i], lambda=lamS)
lamN <- predict(M0, newdata=newX, type="response")
phatN[i] <- dpois(numContri[i], lambda=lamN)
}
tabContri <- table(dat1$contribution)
pObserved <- tabContri / sum(tabContri)
xObserved <- names(pObserved)
plot(0, 0, xlim =c(0, K), ylim=c(0, 0.4), type="n", axes=FALSE, frame.plot=TRUE,
ylab="Probability of count", xlab="Number of contributions")
lines(x = xObserved, y = pObserved)
#segments(x0=as.numeric(xObserved), y0=0, x1=as.numeric(xObserved), y1=pObserved)
lines(x = 1:K, y = phatS, col=2)
lines(x = 1:K, y = phatN, col=3)
legend("topright", col=1:3, lty=1, legend=c("Observed", "Saturated model", "Null model"))
axis(2)
newX <- dat2
numContri <- seq(0, max(dat2$contribution))
K <- length(numContri)
phatN <- phatS <- rep(NA, K)
for(i in 1:K){
lamS <- predict(M1, newdata=newX, type="response")
phatS[i] <- dpois(numContri[i], lambda=lamS)
lamN <- predict(M0, newdata=newX, type="response")
phatN[i] <- dpois(numContri[i], lambda=lamN)
}
tabContri <- table(dat1$contribution)
pObserved <- tabContri / sum(tabContri)
xObserved <- names(pObserved)
plot(0, 0, xlim =c(0, K), ylim=c(0, 0.4), type="n", axes=FALSE, frame.plot=TRUE,
ylab="Probability of count", xlab="Number of contributions")
lines(x = xObserved, y = pObserved)
# newX <- dat2
newX <- with(dat1, cbind.data.frame(male = mean(male), age = mean(age),  loghinc = mean(loghinc), ccpmember = mean(ccpmember)))
newX
# newX <- dat2
newX <- with(dat2, cbind.data.frame(male = mean(male), age = mean(age),  loghinc = mean(loghinc), ccpmember = mean(ccpmember)))
newX
numContri <- seq(0, max(dat2$contribution))
K <- length(numContri)
phatN <- phatS <- rep(NA, K)
for(i in 1:K){
lamS <- predict(M1, newdata=newX, type="response")
phatS[i] <- dpois(numContri[i], lambda=lamS)
lamN <- predict(M0, newdata=newX, type="response")
phatN[i] <- dpois(numContri[i], lambda=lamN)
}
tabContri <- table(dat1$contribution)
pObserved <- tabContri / sum(tabContri)
xObserved <- names(pObserved)
plot(0, 0, xlim =c(0, K), ylim=c(0, 0.4), type="n", axes=FALSE, frame.plot=TRUE,
ylab="Probability of count", xlab="Number of contributions")
lines(x = xObserved, y = pObserved)
#segments(x0=as.numeric(xObserved), y0=0, x1=as.numeric(xObserved), y1=pObserved)
lines(x = 1:K, y = phatS, col=2)
dev.off()
plot(0, 0, xlim =c(0, K), ylim=c(0, 0.4), type="n", axes=FALSE, frame.plot=TRUE,
ylab="Probability of count", xlab="Number of papers")
lines(x = xObserved, y = pObserved)
#segments(x0=as.numeric(xObserved), y0=0, x1=as.numeric(xObserved), y1=pObserved)
lines(x = 1:K, y = phatS, col=2)
lines(x = 1:K, y = phatN, col=3)
legend("topright", col=1:3, lty=1, legend=c("Observed", "Saturated model", "Null model"))
# negative binomial
library(MASS)
M3 <- glm.nb(contribution ~ male + age + ccpmember + loghinc, data=dat1)
summary(M3)
# alpha test
G2 <- 2*(logLik(M3) - logLik(M1))
pchisq(G2, df=1, lower.tail=FALSE)
pchisq
pchisq(G2, df=1, lower.tail=FALSE)
G2
# zero inflated poisson
M5 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data=dat1, dist = "poisson", link = "logit")
# zero inflated poisson
library(pscl)
M5 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data=dat1, dist = "poisson", link = "logit")
M5 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data=dat2, dist = "poisson", link = "logit")
M5 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data=dat1, dist = "poisson", link = "logit")
table(dat1$contribution)
table(dat1$contribution==0)
table(dat1$contribution==1)
table(dat1$contribution==NA)
View(dat2)
View(dat1)
M5 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data = dat2, dist = "poisson", link = "logit")
M5 <- zeroinfl(contribution+1 ~ male + age + ccpmember + loghinc, data = dat2, dist = "poisson", link = "logit")
View(dat)
library(tidyverse)
library(haven)
Sys.setenv(LANG='en')
dat <- read_dta("cgss2010_14.dta")
dat <- read_dta("cgss2010_14.dta")
# summary(dat)
male <- ifelse(dat$a2==1, 1,
ifelse(dat$a2==2, 0, NA)) # gender
a3a <- ifelse(dat$a3a < 17, NA, dat$a3a)  # age
a3a <- ifelse(dat$a3a < 17, NA, dat$a3a)  # age
age <- 2010-a3a
a62 <- ifelse(dat$a62 > 9999996, NA, dat$a62) # income
ccpmember <- ifelse(dat$a10 == 1, 1, 0) # member
probs <- c(0, 0.07, 0.25, 0.5, 0.75, 0.93, 1)
kpts <- quantile(a62, prob=probs, na.rm=TRUE)
hinc <- as.numeric(cut(a62, breaks=kpts, labels = 1:6, right=TRUE))
kpts2 <- quantile(a62, prob=c(0,1/6,2/6,3/6,4/6,5/6,1), na.rm=TRUE)
hinc2 <- as.numeric(cut(a62, breaks=kpts2, labels = 1:6, right=TRUE))
loghinc <- log(a62+1)
n35a <- ifelse(dat$n35a<0, 0, dat$n35a)
# dat1 <- cbind.data.frame("contribution"=factor(n35a), male, age, loghinc, ccpmember)
dat1 <- cbind.data.frame("contribution"=n35a, male, age, loghinc, ccpmember)
dat2 <- na.exclude(dat1)
M1 <- glm(contribution ~ male + age + loghinc + ccpmember, data=dat1, family=poisson(link="log"))
summary(M1)
# pseudo R2
M0 <- update(M1, .~1)
devNull <- deviance(M0)
dev <- deviance(M1)
pR2 <- (devNull - dev) / devNull
pR2
# likelihood ratio test
LR <- devNull - dev
k <- length(coef(M1))
prob <- pchisq(LR, df=k-1, lower.tail = FALSE)
prob
# irr, incidence rate ratio
IRR <- function(fit, newdata){
IR <- predict(fit, newdata, type = "response") #lambdas
IRR <- IR[2]/IR[1]
return(IRR)
}
IRR(M1, dat1)
IRR(M1, dat1)
# predictive difference between gender
newX <- with(dat2, cbind.data.frame(male = c(0,1), age = 30, loghinc = mean(loghinc),
ccpmember = 1))
phat <- predict(M1, newdata=newX, type = "terms")
phat[2,] - phat[1,]
# newX <- dat2
newX <- with(dat2, cbind.data.frame(male = mean(male), age = mean(age),  loghinc = mean(loghinc), ccpmember = mean(ccpmember)))
numContri <- seq(0, max(dat2$contribution))
K <- length(numContri)
phatN <- phatS <- rep(NA, K)
for(i in 1:K){
lamS <- predict(M1, newdata=newX, type="response")
phatS[i] <- dpois(numContri[i], lambda=lamS)
lamN <- predict(M0, newdata=newX, type="response")
phatN[i] <- dpois(numContri[i], lambda=lamN)
}
tabContri <- table(dat1$contribution)
pObserved <- tabContri / sum(tabContri)
xObserved <- names(pObserved)
plot(0, 0, xlim =c(0, K), ylim=c(0, 0.4), type="n", axes=FALSE, frame.plot=TRUE,
ylab="Probability of count", xlab="Number of contributions")
lines(x = xObserved, y = pObserved)
# negative binomial
library(MASS)
M3 <- glm.nb(contribution ~ male + age + ccpmember + loghinc, data=dat1)
summary(M3)
# alpha test
G2 <- 2*(logLik(M3) - logLik(M1))
pchisq(G2, df=1, lower.tail=FALSE)
# zero inflated poisson
library(pscl)
M5 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data = dat2, dist = "poisson", link = "logit")
summary(M5)  #
foo2 <- function() {
require(pscl)
replicate(250, bootSE(fit = M5, data = dat))
}
cl <- makeCluster(parallel::detectCores())
library(parallel)
library(abind)
cl <- makeCluster(parallel::detectCores())
cl <- makeCluster(parallel::detectCores())
bootSE <- function(fit, data){
n <- dim(data)[1]
idx <- sample(1:n, n, replace=TRUE)
newData <- data[idx,]
fit <- update(fit, data = newData)
betas <- coef(fit)
return(betas)
}
M5 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data = dat1, dist = "poisson", link = "logit")
summary(M5)  #
library(parallel)
library(abind)
cl <- makeCluster(parallel::detectCores())
bootSE <- function(fit, data){
n <- dim(data)[1]
idx <- sample(1:n, n, replace=TRUE)
newData <- data[idx,]
fit <- update(fit, data = newData)
betas <- coef(fit)
return(betas)
}
M6 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data=dat1, dist = "negbin", link = "logit")
M6 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data=dat2, dist = "negbin", link = "logit")
M6 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data=dat1, dist = "negbin", link = "logit")
M6 <- zeroinfl(contribution ~ male + age + ccpmember + loghinc, data=dat1, dist = "negbin", link = "logit")
summary(M6)
AIC(M1)
BIC(M1)
BIC(M2)
BIC(M3)
BIC(M5)
AIC(M1)
AIC(M3)
AIC(M5)
AIC(M6)
BIC(M1)
BIC(M3)
BIC(M5)
BIC(M6)
vuong(M3, M6)
vuong(M1, M3, M6)
vuong(M1, M3, M5, M6)
vuong(M1, M3)
vuong(M1, M3)
vuong(M3, M5)
vuong(M3, M5)
vuong(M5, M6)
AIC(M1)
AIC(M3)
AIC(M5)
AIC(M6)
BIC(M1)
BIC(M3)
BIC(M5)
BIC(M6)
vuong(M3, M6)
vuong(M5, M6)
vuong(M1, M3)
BIC(M6)
vuong(M1, M3)
vuong(M1, M3)
vuong(M1, M3,M5)
vuong(M1, M3)
vuong(M3, M5)
vuong(M3, M5)
vuong(M5, M6)
vuong(M3, M6)
vuong(M3, M5)
vuong(M3, M5)
vuong(M5, M6)
vuong(M3, M6)
vuong(M1, M3)
vuong(M3, M5)
vuong(M5, M6)
vuong(M3, M6)
vuong(M1, M3)
vuong(M1, M3)
vuong(M3, M5)
vuong(M3, M5)
vuong(M5, M6)
vuong(M1, M5)
vuong(M3, M6)
newDat <- cbind.data.frame(gender = rep(1, 1000), age=rep(30, 1000), loghinc = seq(0,16, length=1000))
phat <- predict(M1, newdata = newDat, type="probs")
phat <- predict(M1, newdata = newDat, type="terms")
newDat <- cbind.data.frame(gender = rep(1, 1000), age=rep(30, 1000), loghinc = seq(0,16, length=1000), ccpmember = rep(1, 1000))
phat <- predict(M1, newdata = newDat, type="terms")
# graphying predictive probability between genders along ment
M2 <- glm(contribution ~ male + age + loghinc + ccpmember, data=dat2, family=poisson(link="log"))
phat <- predict(M2, newdata = newDat, type="terms")
newDat <- cbind.data.frame(gender = rep(1, 1000), age=rep(30, 1000), loghinc = seq(0,16, length=1000), ccpmember = rep(1, 1000))
phat <- predict(M2, newdata = newDat, type="terms")
# graphying predictive probability between genders along ment
M2 <- glm(contribution ~ male + age + loghinc + ccpmember, data=dat2, family=poisson(link="log"))
newDat <- cbind.data.frame(gender = rep(1, 1000), age=rep(30, 1000), loghinc = seq(0,16, length=1000), ccpmember = rep(1, 1000))
phat <- predict(M2, newdata = newDat, type="terms")
View(M2)
newDat <- cbind.data.frame(gender = rep(1, 1000), age=rep(30, 1000), loghinc = seq(0,16, length=1000), ccpmember = rep(1, 1000))
phat <- predict(M2, newdata = newDat, type="terms")
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
dev.off()
par(mar=c(3,3,1,5), mgp=c(1.5,0.2,0), tcl=-0.2)
plot(0,0, ylim=c(0,1), xlim=range(loghinc, na.rm=TRUE), type="n",
ylab="predictive probabilities", xlab="log(househould income)", xaxs="i", yaxs="i")
rangeInc <- with(dat1, range(loghinc))
rangeInc
range(loghinc)
rangeInc <- with(dat2, range(loghinc))
incFake <- seq(rangeInc[1],rangeInc[2],length=1000)
rangeInc <- with(dat2, range(loghinc))
incFake <- seq(rangeInc[1],rangeInc[2],length=1000)
newXY <- with(dat2, cbind.data.frame(male = 1, age = 30, ccpmember = 1, loghinc = incFake))
newXN <- with(dat2, cbind.data.frame(male = 1, age = 30, ccpmember = 0, loghinc = incFake))
lambdaY <- predict(M1, newdata=newXY, type = "response")
lambdaN <- predict(M1, newdata=newXN, type = "response")
N <- 2 # publish 2 papers
phatY <- dpois(N, lambdaY) # compute predictive probability given N = 2, and lambda predicted from the model
phatN <- dpois(N, lambdaN)
par(mar=c(3,3,1,1), mgp=c(2,0.5,0), tcl=-0.2)
plot(x=incFake, y=phatY, type="l", xlim=rangeInc, ylim=c(0,0.5),
xlab = "Loginc", ylab = "Pr(art = 2)")
lines(x = incFake, y=phatN, col=2)
text(x = incFake[500], y = phatY[500], "CCP Member", adj=0)
text(x = incFake[500], y = phatN[500], "Not CCP Member", adj=1, col=2)
#legend("topright", lty=1, col=c(1,2), legend = c("Female", "Male"))
legend(locator(1), lty=1, col=c(1,2), legend = c("CCP Member", "Not CCP Member"))
rangeInc <- with(dat2, range(loghinc))
incFake <- seq(rangeInc[1],rangeInc[2],length=1000)
newXY <- with(dat2, cbind.data.frame(male = 1, age = 30, ccpmember = 1, loghinc = incFake))
newXN <- with(dat2, cbind.data.frame(male = 1, age = 30, ccpmember = 0, loghinc = incFake))
lambdaY <- predict(M1, newdata=newXY, type = "response")
lambdaN <- predict(M1, newdata=newXN, type = "response")
N <- 5 # publish 2 papers
phatY <- dpois(N, lambdaY) # compute predictive probability given N = 2, and lambda predicted from the model
phatN <- dpois(N, lambdaN)
par(mar=c(3,3,1,1), mgp=c(2,0.5,0), tcl=-0.2)
plot(x=incFake, y=phatY, type="l", xlim=rangeInc, ylim=c(0,0.5),
xlab = "Loginc", ylab = "Pr(contribution = 5)")
lines(x = incFake, y=phatN, col=2)
text(x = incFake[500], y = phatY[500], "CCP Member", adj=0)
text(x = incFake[500], y = phatN[500], "Not CCP Member", adj=1, col=2)
#legend("topright", lty=1, col=c(1,2), legend = c("Female", "Male"))
legend(locator(1), lty=1, col=c(1,2), legend = c("CCP Member", "Not CCP Member"))
library(gitcreds)
gitcreds_set()
gitcreds_set()
a <- 'e'
b <- 1
a+b
library(credentials)
library(gitcreds)
gitcreds_set()
library(gitcreds)
gitcreds_set()
gitcreds_set()
library(gitcreds)
gitcreds_set()
gitcreds_set()
gitcreds_set()
library ( credentials )
set _ github _ pat(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)
set_github_pat(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)
set_github_pat('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')
getwd()
library(haven)
data <- read_dta('/hwk05/cgss2010_14.dta')
getwd()
data <- read_dta('/hwk05/cgss2010_14.dta')
data <- read_dta('hwk05/cgss2010_14.dta')
data <- read_dta('../interplot/cgss2010_14.dta')
library("Matching")
data("lalonde")
attach(lalonde)
m1 <- glm(treat ~ age + educ + black + hisp + married +
nodegr + re74 + re75, family = binomial, data = lalonde)
pm1 <- Match(Y = re78, Tr = treat, X = m1$fitted, estimand = "ATT", M = 1, replace = TRUE)
summary(pm1)
pm2 <- Match(Y = re78, Tr = treat, X = m1$fitted, estimand = "ATT", M = 1, replace = FALSE)
summary(pm2)
mb <- MatchBalance(treat ~ age + educ + black + hisp + married +
nodegr + re74 + re75,
match.out = pm1, nboots = 1000, data = lalonde)
mb <- MatchBalance(treat ~ age + educ + black + hisp + married +
nodegr + re74 + re75,
match.out = pm1, nboots = 1000, data = lalonde)
X <- cbind(age, educ, black, hisp, married, nodegr, re74, re75)
set.seed(1)
library(rgenoud)
genout <- GenMatch(Tr=treat, X=m1$fitted, BalanceMatrix=X, estimand="ATT")
mout <- Match(Y=re78, Tr=treat, X=m1$fitted, estimand="ATT", Weight.matrix=genout)
summary(mout)
genout <- GenMatch(Tr=treat, X=m1$fitted, BalanceMatrix=X, estimand="ATT")
library(rgenoud)
install.packages('rgenoud')
library(MatchIt)
data(lalonde)
# 1对1最近邻匹配法
set.seed(1)
mNearest1v1 <- matchit(treat ~ age + educ + black + hispan + married +
nodegree + re74 + re75, data = lalonde, method = "nearest", ratio=1)
# 1对2最近邻匹配法
mNearest1v2 <- matchit(treat ~ age + educ + black + hispan + married +
nodegree + re74 + re75, data = lalonde, method = "nearest", ratio=2)
library(MatchIt)
data(lalonde)
# 1对1最近邻匹配法
set.seed(1)
mNearest1v1 <- matchit(treat ~ age + educ + black + hispan + married +
nodegree + re74 + re75, data = lalonde, method = "nearest", ratio=1)
mNearest1v1 <- matchit(treat ~ age + educ  + married +
nodegree + re74 + re75, data = lalonde, method = "nearest", ratio=1)
